{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "27059d64-f234-4886-9132-0e3683c6d846",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "        <iframe\n",
       "            width=\"100%\"\n",
       "            height=\"650\"\n",
       "            src=\"http://127.0.0.1:8051/\"\n",
       "            frameborder=\"0\"\n",
       "            allowfullscreen\n",
       "            \n",
       "        ></iframe>\n",
       "        "
      ],
      "text/plain": [
       "<IPython.lib.display.IFrame at 0x12a7a9fd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n",
      "/var/folders/6t/k2z0w0xd0yb9t314_pwkwkp40000gn/T/ipykernel_7587/2317661846.py:1532: DeprecationWarning:\n",
      "\n",
      "DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import base64\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from dash import Dash, dcc, html, Input, Output, State\n",
    "from io import BytesIO\n",
    "from matplotlib.patches import Rectangle\n",
    "\n",
    "DATA_PATH = \"Valencia.csv\"\n",
    "MAPA_CALOR_BASE = \"assets/Mapa calor\"\n",
    "\n",
    "CSV_MAP = {\n",
    "    ('arsenal', 'real_madrid'): 'Ida_Arsenal.csv',\n",
    "    ('real_madrid', 'arsenal'): 'Vuelta_Arsenal.csv',\n",
    "    ('real_madrid', 'valencia'): 'Valencia.csv',\n",
    "    ('alaves', 'real_madrid'): 'Alaves.csv',\n",
    "    ('real_madrid', 'athletic'): 'Bilbao.csv',\n",
    "    ('getafe', 'real_madrid'): 'Getafe.csv',\n",
    "    ('real_madrid', 'real_sociedad'): 'Real_Sociedad.csv',\n",
    "    ('barcelona', 'real_madrid'): 'Final_Barcelona.csv'\n",
    "}\n",
    "\n",
    "df_global = pd.read_csv(DATA_PATH)\n",
    "df_global.columns = df_global.columns.str.strip()\n",
    "df_global['event'] = df_global['event'].str.lower()\n",
    "df_global['player_name'] = df_global['player_name'].fillna('')\n",
    "df_global['team_name'] = df_global['team_name'].fillna('')\n",
    "df_global = df_global[df_global['player_name'].str.lower() != 'unknown']\n",
    "\n",
    "#################################\n",
    "# CREACIÓN PÁGINA, BARRA DE NAVEGACIÓN Y PARTIDOS\n",
    "###############################\n",
    "\n",
    "app = Dash(__name__, suppress_callback_exceptions=True)\n",
    "nav_bar = html.Div([\n",
    "    dcc.Link(html.Img(src='/assets/Logo.png', style={\n",
    "        'height': '95px',\n",
    "        'marginRight': '25px',\n",
    "        'cursor': 'pointer'\n",
    "    }), href='/'),\n",
    "\n",
    "    dcc.Link(html.Img(src='/assets/laliga.png', style={'height': '60px', 'marginRight': '20px'}), href='/liga'),\n",
    "    dcc.Link(html.Img(src='/assets/champions.png', style={'height': '60px', 'marginRight': '20px'}), href='/champions'),\n",
    "    dcc.Link(html.Img(src='/assets/copa.png', style={'height': '60px'}), href='/copa'),\n",
    "], style={\n",
    "    'padding': '20px',\n",
    "    'backgroundColor': '#ffffff',\n",
    "    'display': 'flex',\n",
    "    'alignItems': 'center'\n",
    "})\n",
    "\n",
    "\n",
    "def generar_partidos(partidos, competencia):\n",
    "    elementos = []\n",
    "    for e1, e2 in partidos:\n",
    "        clave = (e1, e2)\n",
    "        nombre_archivo = CSV_MAP.get(clave) or CSV_MAP.get((e2, e1))\n",
    "\n",
    "        resultado = \"-\"\n",
    "        if nombre_archivo:\n",
    "            try:\n",
    "                df = pd.read_csv(os.path.join(\"/Users/jaimegimenez/Desktop/TFM/Partidos_CSV\", nombre_archivo))\n",
    "                df.columns = df.columns.str.strip()\n",
    "                df['event'] = df['event'].str.lower()\n",
    "                df['player_name'] = df['player_name'].fillna('')\n",
    "                df['team_name'] = df['team_name'].fillna('')\n",
    "                df = df[df['player_name'].str.lower() != 'unknown']\n",
    "\n",
    "                resultado = resultado_partido(df, e1.replace('_', ' ').title() + \" CF\", e2.replace('_', ' ').title() + \" CF\")\n",
    "                resultado = resultado.replace(e1.replace('_', ' ').title() + \" CF\", \"\").replace(e2.replace('_', ' ').title() + \" CF\", \"\").strip()\n",
    "            except Exception as e:\n",
    "                resultado = \"-\"\n",
    "\n",
    "        elementos.append(\n",
    "            html.Div([\n",
    "                html.A([\n",
    "                    html.Div([html.Img(src=f'/assets/{e1}.png', style={'height': '50px'})],\n",
    "                             style={'flex': '1', 'textAlign': 'right'}),\n",
    "\n",
    "                    html.Div([\n",
    "                        html.Span(resultado, style={'fontSize': '24px', 'fontWeight': 'bold'})\n",
    "                    ], style={'flex': '0 0 60px', 'textAlign': 'center'}),\n",
    "\n",
    "                    html.Div([html.Img(src=f'/assets/{e2}.png', style={'height': '50px'})],\n",
    "                             style={'flex': '1', 'textAlign': 'left'}),\n",
    "                ],\n",
    "                href=f'/analisis/{competencia}/{e1}-{e2}',\n",
    "                style={\n",
    "                    'display': 'flex',\n",
    "                    'alignItems': 'center',\n",
    "                    'textDecoration': 'none',\n",
    "                    'color': 'black'\n",
    "                })\n",
    "            ], style={\n",
    "                'backgroundColor': '#ffffff',\n",
    "                'padding': '15px 25px',\n",
    "                'borderRadius': '12px',\n",
    "                'boxShadow': '0 2px 8px rgba(0,0,0,0.1)',\n",
    "                'transition': 'all 0.3s ease',\n",
    "                'width': '100%',\n",
    "                'maxWidth': '500px'\n",
    "            }, className='partido-card')\n",
    "        )\n",
    "    return elementos\n",
    "\n",
    "\n",
    "#################################\n",
    "# NORMALIZACIÓN DE NOMBRES\n",
    "#################################\n",
    "\n",
    "def normalizar_nombre(nombre):\n",
    "    if not isinstance(nombre, str):\n",
    "        return \"\"\n",
    "    nombre = nombre.lower().replace(\" cf\", \"\").replace(\" fc\", \"\").strip()\n",
    "    reemplazos = {\n",
    "        'athletic club bilbao': 'athletic',\n",
    "        'real sociedad de fútbol': 'real sociedad',\n",
    "        'deportivo alavés': 'alaves',\n",
    "        'valencia cf': 'valencia',\n",
    "        'fc barcelona': 'barcelona',\n",
    "        'getafe cf': 'getafe',\n",
    "        'arsenal fc': 'arsenal',\n",
    "    }\n",
    "\n",
    "    return reemplazos.get(nombre, nombre)\n",
    "\n",
    "#################################\n",
    "# CREACIÓN DE LAS COMPETICIONES\n",
    "#################################\n",
    "\n",
    "def competiciones(nombre, partidos, competencia):\n",
    "    return html.Div([\n",
    "        nav_bar,\n",
    "        html.Div([\n",
    "            html.H1(nombre, style={\n",
    "                'fontSize': '36px',\n",
    "                'fontWeight': 'bold',\n",
    "                'borderBottom': '3px solid #d32f2f',\n",
    "                'paddingBottom': '10px',\n",
    "                'marginBottom': '30px'\n",
    "            }),\n",
    "            html.H2('Partidos:', style={\n",
    "                'fontSize': '24px',\n",
    "                'marginBottom': '20px',\n",
    "                'color': '#333'\n",
    "            }),\n",
    "            html.Div(generar_partidos(partidos, competencia), style={\n",
    "                'display': 'flex',\n",
    "                'flexDirection': 'column',\n",
    "                'alignItems': 'center',\n",
    "                'gap': '20px'\n",
    "            })\n",
    "        ], style={\n",
    "            'maxWidth': '700px',\n",
    "            'margin': '40px auto',\n",
    "            'padding': '0 20px'\n",
    "        })\n",
    "    ])\n",
    "\n",
    "def liga():\n",
    "    partidos = [\n",
    "        ('real_madrid', 'valencia'),\n",
    "        ('alaves', 'real_madrid'),\n",
    "        ('real_madrid', 'athletic'),\n",
    "        ('getafe', 'real_madrid')\n",
    "    ]\n",
    "    return competiciones('La Liga', partidos, 'liga')\n",
    "\n",
    "def champions():\n",
    "    partidos = [('arsenal', 'real_madrid'), ('real_madrid', 'arsenal')]\n",
    "    return html.Div(className='champions', children=competiciones('Champions League', partidos, 'champions'))\n",
    "\n",
    "def copa():\n",
    "    partidos = [('real_madrid', 'real_sociedad'), ('barcelona', 'real_madrid')]\n",
    "    return html.Div(className='copa', children=competiciones('Copa del Rey', partidos, 'copa'))\n",
    "\n",
    "#################################\n",
    "# CREACIÓN DISEÑO WEB\n",
    "#################################\n",
    "\n",
    "app.index_string = '''\n",
    "<!DOCTYPE html>\n",
    "<html>\n",
    "    <head>\n",
    "        {%metas%}\n",
    "        <title>{%title%}</title>\n",
    "        {%favicon%}\n",
    "        {%css%}\n",
    "        <style>\n",
    "            body {\n",
    "                background-color: #eaeaea;\n",
    "            }\n",
    "            .partido-card {\n",
    "                background-color: #ffffff;\n",
    "            }\n",
    "            .partido-card:hover {\n",
    "                background-color: #eef6ff;\n",
    "                transform: scale(1.02);\n",
    "            }\n",
    "            .champions h1 {\n",
    "                border-bottom: 3px solid #1e88e5 !important;\n",
    "            }\n",
    "                    .copa h1 {\n",
    "                border-bottom: 3px solid #aa00ff !important;\n",
    "            }\n",
    "            .modo-oscuro body {\n",
    "                background-color: #1c1c1c;\n",
    "                color: #f0f0f0;\n",
    "            }\n",
    "            .modo-oscuro .partido-card {\n",
    "                background-color: #2b2b2b;\n",
    "                color: white;\n",
    "            }\n",
    "            .modo-oscuro .partido-card:hover {\n",
    "                background-color: #3a3a3a;\n",
    "            }\n",
    "        </style>\n",
    "    </head>\n",
    "    <body>\n",
    "        {%app_entry%}\n",
    "        <footer>\n",
    "            {%config%}\n",
    "            {%scripts%}\n",
    "            {%renderer%}\n",
    "        </footer>\n",
    "    </body>\n",
    "</html>\n",
    "'''\n",
    "\n",
    "#################################\n",
    "# FUNCIÓN DE OBTENER LOS RESULTADOS \n",
    "#################################\n",
    "\n",
    "def resultado_partido(df, equipo1, equipo2):\n",
    "\n",
    "    df['event'] = df['event'].astype(str).str.strip().str.lower()\n",
    "    df['own goal'] = df['own goal'].fillna(0)\n",
    "\n",
    "    goles = df[\n",
    "        (df['event'] == 'goal') &\n",
    "        (df['own goal'] != 1.0)\n",
    "    ].copy()\n",
    "\n",
    "    goles['team_name_clean'] = goles['team_name'].apply(normalizar_nombre)\n",
    "    df['team_name_clean'] = df['team_name'].apply(normalizar_nombre)\n",
    "\n",
    "    eq1 = normalizar_nombre(equipo1)\n",
    "    eq2 = normalizar_nombre(equipo2)\n",
    "\n",
    "    goles_eq1 = goles[goles['team_name_clean'] == eq1].shape[0]\n",
    "    goles_eq2 = goles[goles['team_name_clean'] == eq2].shape[0]\n",
    "\n",
    "    autogoles = df[\n",
    "        (df['event'] == 'goal') &\n",
    "        (df['own goal'] == 1.0)\n",
    "    ]\n",
    "\n",
    "    for _, row in autogoles.iterrows():\n",
    "        equipo_autogol = row['team_name_clean']\n",
    "        if equipo_autogol == eq1:\n",
    "            goles_eq2 += 1\n",
    "        elif equipo_autogol == eq2:\n",
    "            goles_eq1 += 1\n",
    "\n",
    "    return f\"{equipo1} {goles_eq1} - {goles_eq2} {equipo2}\"\n",
    "\n",
    "#################################\n",
    "# CREACIÓN TABLA ESTADÍSTICAS GENERALES \n",
    "#################################\n",
    "\n",
    "    \n",
    "def calcular_estadisticas(df, equipo, jugador):\n",
    "    df = df.copy()\n",
    "    df['outcome'] = df['outcome'].astype(str)\n",
    "    stats = {}\n",
    "\n",
    "    pases = df[(df['event'] == 'pass') & (df['team_name'] == equipo) & (df['player_name'] == jugador)]\n",
    "    total_pases = len(pases)\n",
    "    pases_completados = pases[~pases['outcome'].str.lower().isin(['unsuccessful', 'fail', '0'])].shape[0]\n",
    "    stats[\"Pases\"] = total_pases\n",
    "    stats[\"Pases Completados\"] = pases_completados\n",
    "\n",
    "    goles_df = df[(df['event'] == 'goal') & (df['team_name'] == equipo) & (df['player_name'] == jugador) & (df.get('own goal', 0) != 1.0)]\n",
    "    minutos_goles = [f\"{int(row['time_min'])}'\" for _, row in goles_df.iterrows()]\n",
    "    if minutos_goles:\n",
    "        stats[\"Goles\"] = f\"{len(minutos_goles)} ({', '.join(minutos_goles)})\"\n",
    "\n",
    "    autogoles = df[(df['event'] == 'goal') & (df['own goal'] == 1.0) & (df['player_name'] == jugador)]\n",
    "    minutos_autogoles = [f\"{int(row['time_min'])}'\" for _, row in autogoles.iterrows()]\n",
    "    if minutos_autogoles:\n",
    "        stats[\"Autogoles\"] = f\"{len(minutos_autogoles)} ({', '.join(minutos_autogoles)})\"\n",
    "\n",
    "    paradas = df[(df['event'] == 'save') & (df['team_name'] == equipo) & (df['player_name'] == jugador)]\n",
    "    if not paradas.empty:\n",
    "        stats[\"Paradas\"] = paradas.shape[0]\n",
    "\n",
    "    asistencias = []\n",
    "    all_goals = df[(df['event'] == 'goal') & (df['team_name'] == equipo)]\n",
    "    for idx, goal_row in all_goals.iterrows():\n",
    "        goal_index = goal_row.name\n",
    "        tiempo_gol = int(goal_row.get('time_min', -1))\n",
    "        for i in range(goal_index - 1, max(goal_index - 6, -1), -1):\n",
    "            row = df.iloc[i]\n",
    "            tiempo_pase = int(row.get('time_min', -1))\n",
    "            if (\n",
    "                row['event'] == 'pass' and\n",
    "                row['team_name'] == equipo and\n",
    "                row['player_name'] == jugador and\n",
    "                row['player_name'] != goal_row['player_name'] and\n",
    "                0 <= tiempo_gol - tiempo_pase <= 1\n",
    "            ):\n",
    "                asistencias.append(f\"{tiempo_pase}'\")\n",
    "                break\n",
    "    if asistencias:\n",
    "        stats[\"Asistencias\"] = f\"{len(asistencias)} ({', '.join(asistencias)})\"\n",
    "\n",
    "    faltas_cometidas = df[(df['event'] == 'foul') & (df['team_name'] == equipo) &\n",
    "                          (df['player_name'] == jugador) & (df['outcome'] == '0')].shape[0]\n",
    "    if faltas_cometidas:\n",
    "        stats[\"Faltas Cometidas\"] = faltas_cometidas\n",
    "\n",
    "    faltas_recibidas = df[(df['event'] == 'foul') & (df['team_name'] == equipo) &\n",
    "                          (df['player_name'] == jugador) & (df['outcome'] == '1')].shape[0]\n",
    "    if faltas_recibidas:\n",
    "        stats[\"Faltas Recibidas\"] = faltas_recibidas\n",
    "\n",
    "    tarjetas = df[(df['event'] == 'card') & (df['team_name'] == equipo) & (df['player_name'] == jugador)]\n",
    "    amarillas = tarjetas[tarjetas['type_id'] == 17].shape[0]\n",
    "    rojas = tarjetas[tarjetas['type_id'] == 18].shape[0]\n",
    "    if amarillas:\n",
    "        stats[\"Tarjetas Amarillas\"] = amarillas\n",
    "    if rojas:\n",
    "        stats[\"Tarjetas Rojas\"] = rojas\n",
    "\n",
    "    duelos = df[(df['event'] == 'aerial') & (df['team_name'] == equipo) & (df['player_name'] == jugador)]\n",
    "    duelos_ganados = duelos[duelos['outcome'] == '1'].shape[0]\n",
    "    duelos_perdidos = duelos[duelos['outcome'] == '0'].shape[0]\n",
    "    if duelos_ganados or duelos_perdidos:\n",
    "        total = duelos_ganados + duelos_perdidos\n",
    "        porcentaje = (duelos_ganados / total * 100) if total else 0\n",
    "        stats[\"Duelos Ganados\"] = f\"{duelos_ganados}/{total} ({porcentaje:.0f}%)\"\n",
    "\n",
    "\n",
    "    tiros = contar_tiros(df, equipo, jugador)\n",
    "    if tiros:\n",
    "        stats[\"Tiros\"] = tiros\n",
    "\n",
    "    return stats\n",
    "\n",
    "#################################\n",
    "# CARGAR MAPAS DE CALOR CREADOS EN OTRO CÓDIGO\n",
    "#################################\n",
    "\n",
    "def cargar_mapa_calor(equipo, jugador, pathname=None):\n",
    "    if not equipo or not jugador or not pathname:\n",
    "        return ''\n",
    "\n",
    "    partes = pathname.split('/')\n",
    "    if len(partes) < 4:\n",
    "        return ''\n",
    "\n",
    "    raw_partido = partes[3]\n",
    "    carpeta_mapas = {\n",
    "        \"real_madrid-valencia\": \"Mapa calor Valencia\",\n",
    "        \"alaves-real_madrid\": \"Mapa calor Alaves\",\n",
    "        \"real_madrid-athletic\": \"Mapa calor Bilbao\",\n",
    "        \"getafe-real_madrid\": \"Mapa calor Getafe\",\n",
    "        \"real_madrid-real_sociedad\": \"Mapa calor Real Sociedad\",\n",
    "        \"barcelona-real_madrid\": \"Mapa calor Barcelona\",\n",
    "        \"arsenal-real_madrid\": \"Mapa calor Ida_Arsenal\",\n",
    "        \"real_madrid-arsenal\": \"Mapa calor Vuelta Arsenal\",\n",
    "    }\n",
    "\n",
    "    carpeta = carpeta_mapas.get(raw_partido)\n",
    "    if not carpeta:\n",
    "        return ''\n",
    "\n",
    "    nombre_archivo = \"Equipo Completo.png\" if jugador == \"Equipo Completo\" else f\"{jugador}.png\"\n",
    "    path = os.path.join(\"assets\", carpeta, equipo, nombre_archivo)\n",
    "\n",
    "    if os.path.exists(path):\n",
    "        with open(path, 'rb') as f:\n",
    "            return f'data:image/png;base64,{base64.b64encode(f.read()).decode()}'\n",
    "    return ''\n",
    "\n",
    "#################################\n",
    "# FUNCIONES PARA CONTAR ACCIONES\n",
    "#################################\n",
    "\n",
    "def contar_tiros(df, equipo, jugador):\n",
    "    eventos_tiro = ['saved shot', 'goal', 'miss', 'shot on post', 'blocked shot']\n",
    "    df['event_clean'] = df['event'].astype(str).str.strip().str.lower()\n",
    "\n",
    "    return df[\n",
    "        (df['event_clean'].isin(eventos_tiro)) &\n",
    "        (df['team_name'] == equipo) &\n",
    "        (df['player_name'] == jugador)\n",
    "    ].shape[0]\n",
    "\n",
    "\n",
    "def convertir_tarjetas_a_num(valor):\n",
    "    try:\n",
    "        return int(valor)\n",
    "    except:\n",
    "        return 0\n",
    "\n",
    "def deducir_equipo_1(equipos, equipo2):\n",
    "    posibles = [e for e in equipos if e != equipo2]\n",
    "    return posibles[0] if posibles else equipo2\n",
    "\n",
    "def contar_pases_totales(df, equipo):\n",
    "    eq = normalizar_nombre(equipo)\n",
    "    pases = df[(df['event_clean'] == 'pass') & (df['team_name_clean'] == eq)]\n",
    "\n",
    "    if 'qualifier_id' in df.columns:\n",
    "        pases = pases[~df['qualifier_id'].astype(str).isin(['2', '5', '6', '107', '123', '124'])]\n",
    "\n",
    "    return pases.shape[0]\n",
    "\n",
    "def contar_pases_completados(df, equipo):\n",
    "    eq = normalizar_nombre(equipo)\n",
    "    pases = df[\n",
    "        (df['event_clean'] == 'pass') &\n",
    "        (df['team_name_clean'] == eq) &\n",
    "        (~df['outcome'].astype(str).str.lower().isin(['0', 'unsuccessful', 'fail']))\n",
    "    ]\n",
    "\n",
    "    if 'qualifier_id' in df.columns:\n",
    "        pases = pases[~pases['qualifier_id'].astype(str).isin(['1', '3', '4', '155', '156', '168','2', '5', '6', '107', '123', '124','195', '196', '198', '199'])]\n",
    "\n",
    "    return pases.shape[0]\n",
    "\n",
    "def contar_fueras_de_juego(df, equipo):\n",
    "    df['event_clean'] = df['event'].astype(str).str.strip().str.lower()\n",
    "    df['team_name_clean'] = df['team_name'].apply(normalizar_nombre)\n",
    "\n",
    "    eq = normalizar_nombre(equipo)\n",
    "\n",
    "    return df[\n",
    "        (df['event_clean'] == 'offside pass') &\n",
    "        (df['team_name_clean'] == eq)\n",
    "    ].shape[0]\n",
    "\n",
    "def contar_corners(df, equipo):\n",
    "    \n",
    "    df['event_clean'] = df['event'].astype(str).str.strip().str.lower()\n",
    "    df['team_name_clean'] = df['team_name'].apply(normalizar_nombre)\n",
    "    df['player_name'] = df['player_name'].fillna('').astype(str).str.strip()\n",
    "\n",
    "    eq = normalizar_nombre(equipo)\n",
    "\n",
    "    mask = (\n",
    "        (df['event_clean'] == 'corner awarded') &\n",
    "        (df['team_name_clean'] == eq) &\n",
    "        (df['player_name'] != '') &\n",
    "        (df['outcome'].astype(str) == '1')\n",
    "    )\n",
    "\n",
    "    return df[mask].shape[0]\n",
    "\n",
    "def contar_tiros_totales(df, equipo):\n",
    "    eventos_tiro = ['saved shot', 'goal', 'miss', 'shot on post', 'blocked shot']\n",
    "    eq = normalizar_nombre(equipo)\n",
    "    \n",
    "    df['team_name_clean'] = df['team_name'].apply(normalizar_nombre)\n",
    "    df['event_clean'] = df['event'].astype(str).str.strip().str.lower()\n",
    "    \n",
    "    return df[\n",
    "        (df['event_clean'].isin(eventos_tiro)) &\n",
    "        (df['team_name_clean'] == eq)\n",
    "    ].shape[0]\n",
    "\n",
    "def contar_tiros_a_puerta(df, equipo):\n",
    "    eventos_a_puerta = ['goal', 'saved shot']\n",
    "    df['event_clean'] = df['event'].astype(str).str.strip().str.lower()\n",
    "    df['team_name_clean'] = df['team_name'].apply(normalizar_nombre)\n",
    "\n",
    "    eq = normalizar_nombre(equipo)\n",
    "\n",
    "    return df[\n",
    "        (df['event_clean'].isin(eventos_a_puerta)) &\n",
    "        (df['team_name_clean'] == eq)\n",
    "    ].shape[0]\n",
    "\n",
    "\n",
    "def contar_faltas(df, equipo):\n",
    "    eq = normalizar_nombre(equipo)\n",
    "    return df[\n",
    "        (df['event_clean'] == 'foul') &\n",
    "        (df['team_name_clean'] == eq) &\n",
    "        (df['outcome'].astype(str) == '0')  # Solo faltas cometidas\n",
    "    ].shape[0]\n",
    "\n",
    "\n",
    "def contar_tarjetas(df, equipo):\n",
    "    eq = normalizar_nombre(equipo)\n",
    "    amarillas = df[\n",
    "        (df['event_clean'] == 'card') &\n",
    "        (df['team_name_clean'] == eq) &\n",
    "        (df['type_id'] == 17)\n",
    "    ].shape[0]\n",
    "    rojas = df[\n",
    "        (df['event_clean'] == 'card') &\n",
    "        (df['team_name_clean'] == eq) &\n",
    "        (df['type_id'] == 18)\n",
    "    ].shape[0]\n",
    "    return amarillas + rojas  \n",
    "\n",
    "#################################\n",
    "# CREAR TABLAS COMPARATIVAS DE LOS EQUIPOS Y INDICAR EN QUÉ ORDEN DEBEN IR\n",
    "#################################\n",
    "\n",
    "def analisis_general_por_equipo(df, equipo1, equipo2):\n",
    "    stats1 = {\n",
    "        \"Pases Totales\": contar_pases_totales(df, equipo1),\n",
    "        \"Pases Completados\": contar_pases_completados(df, equipo1),\n",
    "        \"Tiros Totales\": contar_tiros_totales(df, equipo1),\n",
    "        \"Tiros a Puerta\": contar_tiros_a_puerta(df, equipo1),  \n",
    "        \"Fueras de Juego\": contar_fueras_de_juego(df, equipo1),\n",
    "        \"Córners\": contar_corners(df, equipo1),\n",
    "        \"Faltas Cometidas\": contar_faltas(df, equipo1),\n",
    "        \"Tarjetas Recibidas\": contar_tarjetas(df, equipo1)\n",
    "    }\n",
    "\n",
    "    stats2 = {\n",
    "        \"Pases Totales\": contar_pases_totales(df, equipo2),\n",
    "        \"Pases Completados\": contar_pases_completados(df, equipo2),\n",
    "        \"Tiros Totales\": contar_tiros_totales(df, equipo2),\n",
    "        \"Tiros a Puerta\": contar_tiros_a_puerta(df, equipo2),  \n",
    "        \"Fueras de Juego\": contar_fueras_de_juego(df, equipo2),\n",
    "        \"Córners\": contar_corners(df, equipo2),\n",
    "        \"Faltas Cometidas\": contar_faltas(df, equipo2),\n",
    "        \"Tarjetas Recibidas\": contar_tarjetas(df, equipo2)\n",
    "    }\n",
    "\n",
    "\n",
    "    return html.Div([\n",
    "        html.H3(\"Comparativa equipos\", style={'textAlign': 'center', 'marginBottom': '20px'}),\n",
    "        tabla_estadisticas(stats1, stats2, equipo1, equipo2)\n",
    "    ])\n",
    "\n",
    "    \n",
    "def tabla_estadisticas(stats1, stats2, nombre1, nombre2):\n",
    "    all_keys = set(stats1.keys()).union(set(stats2.keys()))\n",
    "\n",
    "    orden_equipos = [\n",
    "        'Pases Totales', 'Pases Completados',\n",
    "        'Tiros Totales', 'Tiros a Puerta',  \n",
    "        'Fueras de Juego', 'Córners',\n",
    "        'Faltas Cometidas', 'Tarjetas Recibidas'\n",
    "    ]\n",
    "\n",
    "\n",
    "    orden_jugadores = [\n",
    "    'Pases',\n",
    "    'Pases Completados',\n",
    "    'Goles',\n",
    "    'Autogoles',\n",
    "    'Asistencias',\n",
    "    'Faltas Cometidas',\n",
    "    'Faltas Recibidas',\n",
    "    'Duelos Ganados',\n",
    "    'Tiros',\n",
    "    'Tarjetas Amarillas',\n",
    "    'Tarjetas Rojas'\n",
    "]\n",
    "    orden = orden_equipos\n",
    "    es_comparacion_jugadores = 'Pases' in stats1 or 'Pases' in stats2\n",
    "    orden = orden_jugadores if es_comparacion_jugadores else orden_equipos\n",
    "\n",
    "\n",
    "    ordered_keys = [\n",
    "        key for key in orden\n",
    "        if (key in stats1 and stats1[key] != '-') or (key in stats2 and stats2[key] != '-')\n",
    "    ]\n",
    "\n",
    "    rows = []\n",
    "\n",
    "    def parse_val(v):\n",
    "        try:\n",
    "            return int(str(v).split(' ')[0])\n",
    "        except:\n",
    "            return -1\n",
    "\n",
    "    for key in ordered_keys:\n",
    "        val1 = stats1.get(key, '-')\n",
    "        val2 = stats2.get(key, '-')\n",
    "\n",
    "        if key == \"Pases Completados\":\n",
    "            if \"Pases Totales\" in stats1 and \"Pases Totales\" in stats2:\n",
    "                try:\n",
    "                    completados1 = int(str(val1).split(' ')[0])\n",
    "                    completados2 = int(str(val2).split(' ')[0])\n",
    "                    total1 = int(str(stats1.get(\"Pases Totales\", \"0\")).split(' ')[0])\n",
    "                    total2 = int(str(stats2.get(\"Pases Totales\", \"0\")).split(' ')[0])\n",
    "                    pct1 = f\"{(completados1 / total1 * 100):.0f}%\" if total1 else \"-\"\n",
    "                    pct2 = f\"{(completados2 / total2 * 100):.0f}%\" if total2 else \"-\"\n",
    "                    val1 = f\"{completados1} ({pct1})\"\n",
    "                    val2 = f\"{completados2} ({pct2})\"\n",
    "                except:\n",
    "                    val1 = f\"{val1} (-)\"\n",
    "                    val2 = f\"{val2} (-)\"\n",
    "            elif \"Pases\" in stats1 and \"Pases\" in stats2:\n",
    "                try:\n",
    "                    completados1 = int(str(val1).split(' ')[0])\n",
    "                    completados2 = int(str(val2).split(' ')[0])\n",
    "                    total1 = int(str(stats1.get(\"Pases\", \"0\")).split(' ')[0])\n",
    "                    total2 = int(str(stats2.get(\"Pases\", \"0\")).split(' ')[0])\n",
    "                    pct1 = f\"{(completados1 / total1 * 100):.0f}%\" if total1 else \"-\"\n",
    "                    pct2 = f\"{(completados2 / total2 * 100):.0f}%\" if total2 else \"-\"\n",
    "                    val1 = f\"{completados1} ({pct1})\"\n",
    "                    val2 = f\"{completados2} ({pct2})\"\n",
    "                except:\n",
    "                    val1 = f\"{val1} (-)\"\n",
    "                    val2 = f\"{val2} (-)\"\n",
    "\n",
    "        elif key == \"Duelos Ganados\":\n",
    "            try:\n",
    "                pct1 = int(val1.split('(')[-1].replace('%', '').replace(')', '').strip())\n",
    "                pct2 = int(val2.split('(')[-1].replace('%', '').replace(')', '').strip())\n",
    "            except:\n",
    "                pct1 = pct2 = -1\n",
    "\n",
    "\n",
    "        if key == \"Duelos Ganados\":\n",
    "            color1 = 'green' if pct1 > pct2 else ('green' if pct1 == pct2 and pct1 != -1 else 'black')\n",
    "            color2 = 'green' if pct2 > pct1 else ('green' if pct1 == pct2 and pct1 != -1 else 'black')\n",
    "        else:\n",
    "            num1, num2 = parse_val(val1), parse_val(val2)\n",
    "            color1 = 'green' if num1 > num2 else ('green' if num1 == num2 and num1 != -1 else 'black')\n",
    "            color2 = 'green' if num2 > num1 else ('green' if num1 == num2 and num1 != -1 else 'black')\n",
    "\n",
    "        rows.append(html.Tr([\n",
    "            html.Td(key, style={'padding': '12px', 'textAlign': 'left', 'fontWeight': 'bold'}),\n",
    "            html.Td(val1, style={'padding': '12px', 'textAlign': 'center', 'color': color1}),\n",
    "            html.Td(val2, style={'padding': '12px', 'textAlign': 'center', 'color': color2})\n",
    "        ], style={'borderBottom': '1px solid #ccc'}))\n",
    "\n",
    "    header = html.Tr([\n",
    "        html.Th(\"Estadística\", style={\n",
    "            'padding': '14px', 'textAlign': 'left',\n",
    "            'fontSize': '18px', 'borderBottom': '2px solid #555'\n",
    "        }),\n",
    "        html.Th(nombre1, style={\n",
    "            'padding': '14px', 'textAlign': 'center',\n",
    "            'fontSize': '18px', 'borderBottom': '2px solid #555'\n",
    "        }),\n",
    "        html.Th(nombre2, style={\n",
    "            'padding': '14px', 'textAlign': 'center',\n",
    "            'fontSize': '18px', 'borderBottom': '2px solid #555'\n",
    "        })\n",
    "    ])\n",
    "\n",
    "    radar = None\n",
    "    if es_comparacion_jugadores:\n",
    "        radar = html.Div([\n",
    "            html.Br(),\n",
    "            html.H4(\"Gráfico Radar\", style={'textAlign': 'center', 'marginTop': '20px'}),\n",
    "            grafico_radar(stats1, stats2, nombre1, nombre2)\n",
    "        ])\n",
    "\n",
    "    return html.Div([\n",
    "        html.Table([\n",
    "            html.Thead(header),\n",
    "            html.Tbody(rows)\n",
    "        ], style={\n",
    "            'width': '90%',\n",
    "            'margin': '0 auto',\n",
    "            'borderCollapse': 'collapse',\n",
    "            'fontFamily': 'Arial, sans-serif',\n",
    "            'backgroundColor': '#fff',\n",
    "            'boxShadow': '0 4px 12px rgba(0,0,0,0.1)',\n",
    "            'borderRadius': '8px',\n",
    "            'overflow': 'hidden'\n",
    "        }),\n",
    "        radar if radar else html.Div()\n",
    "    ])\n",
    "\n",
    "def extraer_valor(val, key):\n",
    "    try:\n",
    "        if key == 'Duelos Ganados':\n",
    "            if '(' in val:\n",
    "                porcentaje = val.split('(')[-1].replace('%', '').replace(')', '').strip()\n",
    "                return float(porcentaje)\n",
    "            else:\n",
    "                return 0\n",
    "        elif val == '-' or val == '':\n",
    "            return 0\n",
    "        else:\n",
    "            return float(str(val).split(' ')[0])\n",
    "    except:\n",
    "        return 0\n",
    "\n",
    "#################################\n",
    "# FUNCIÓN PARA GENERAR EL RADAR\n",
    "###############################\n",
    "\n",
    "def grafico_radar(stats1, stats2, nombre1, nombre2):\n",
    "    orden_jugadores = [\n",
    "        'Pases',\n",
    "        'Pases Completados',\n",
    "        'Goles',\n",
    "        'Autogoles',\n",
    "        'Asistencias',\n",
    "        'Faltas Cometidas',\n",
    "        'Faltas Recibidas',\n",
    "        'Duelos Ganados',\n",
    "        'Tiros',\n",
    "        'Tarjetas Amarillas',\n",
    "        'Tarjetas Rojas'\n",
    "    ]\n",
    "\n",
    "    categorias = []\n",
    "    valores1 = []\n",
    "    valores2 = []\n",
    "    \n",
    "    for key in orden_jugadores:\n",
    "        if key in stats1 or key in stats2:\n",
    "            categorias.append(key)\n",
    "            valores1.append(extraer_valor(stats1.get(key, '0'), key))\n",
    "            valores2.append(extraer_valor(stats2.get(key, '0'), key))\n",
    "\n",
    "    categorias += [categorias[0]]\n",
    "    valores1 += [valores1[0]]\n",
    "    valores2 += [valores2[0]]\n",
    "\n",
    "    valores_max = [max(v1, v2) for v1, v2 in zip(valores1, valores2)]\n",
    "    valores1_norm = [v1 / vmax if vmax else 0 for v1, vmax in zip(valores1, valores_max)]\n",
    "    valores2_norm = [v2 / vmax if vmax else 0 for v2, vmax in zip(valores2, valores_max)]\n",
    "\n",
    "    \n",
    "    fig = go.Figure()\n",
    "\n",
    "    fig.add_trace(go.Scatterpolar(\n",
    "        r=valores1_norm,\n",
    "        theta=categorias,\n",
    "        fill='toself',\n",
    "        name=nombre1,\n",
    "        hovertemplate='<b>%{r}</b><br>%{theta}<extra></extra>'\n",
    "    ))\n",
    "\n",
    "    fig.add_trace(go.Scatterpolar(\n",
    "        r=valores2_norm,\n",
    "        theta=categorias,\n",
    "        fill='toself',\n",
    "        name=nombre2,\n",
    "        hovertemplate='<b>%{r}</b><br>%{theta}<extra></extra>'\n",
    "    ))\n",
    "\n",
    "    fig.update_layout(\n",
    "        polar=dict(\n",
    "            radialaxis=dict(visible=True, range=[0, 1])\n",
    "        ),\n",
    "        showlegend=True,\n",
    "        height=500,\n",
    "        margin=dict(l=40, r=40, t=40, b=40)\n",
    "    )\n",
    "\n",
    "    return dcc.Graph(figure=fig)\n",
    "\n",
    "\n",
    "\n",
    "#################################\n",
    "# CREACIÓN DE MAPA DE TIROS\n",
    "#################################\n",
    "    \n",
    "def mapa_tiros(df, equipo):\n",
    "    import plotly.graph_objects as go\n",
    "\n",
    "    eventos_tiro = ['saved shot', 'goal', 'miss', 'shot on post', 'blocked shot']\n",
    "    df_tiros = df[\n",
    "        (df['event'].str.lower().isin(eventos_tiro)) &\n",
    "        (df['team_name'] == equipo)\n",
    "    ].copy()\n",
    "\n",
    "    if df_tiros['x'].mean() < 50:\n",
    "        df_tiros['x'] = 100 - df_tiros['x']\n",
    "        df_tiros['y'] = 100 - df_tiros['y']\n",
    "\n",
    "    df_tiros['y'] = df_tiros['y'] * (60 / 100)\n",
    "    df_tiros['hover'] = df_tiros['player_name'] + \" (\" + df_tiros['event'].str.capitalize() + \")\"\n",
    "    df_tiros['tipo'] = 'Fuera / bloqueado'\n",
    "    df_tiros.loc[df_tiros['event'].str.lower().isin(['goal', 'saved shot']), 'tipo'] = 'A puerta'\n",
    "    df_tiros.loc[df_tiros['event'].str.lower() == 'goal', 'tipo'] = 'Gol'\n",
    "\n",
    "    color_map = {\n",
    "        'Fuera / bloqueado': 'red',\n",
    "        'A puerta': 'orange',\n",
    "        'Gol': 'white'\n",
    "    }\n",
    "\n",
    "    fig = go.Figure()\n",
    "\n",
    "    for tipo in df_tiros['tipo'].unique():\n",
    "        tiros_tipo = df_tiros[df_tiros['tipo'] == tipo]\n",
    "        fig.add_trace(go.Scatter(\n",
    "            x=tiros_tipo['x'],\n",
    "            y=tiros_tipo['y'],\n",
    "            mode='markers',\n",
    "            name=tipo,\n",
    "            marker=dict(color=color_map[tipo], size=10, line=dict(width=1, color='black')),\n",
    "            hovertext=tiros_tipo['hover'],\n",
    "            hoverinfo='text'\n",
    "        ))\n",
    "\n",
    "    shapes = []\n",
    "\n",
    "    for i in range(12):\n",
    "        shapes.append(dict(\n",
    "            type='rect',\n",
    "            x0=i * (100 / 12),\n",
    "            x1=(i + 1) * (100 / 12),\n",
    "            y0=0,\n",
    "            y1=60,\n",
    "            fillcolor='#3a5f2d' if i % 2 == 0 else '#3d642d',\n",
    "            line=dict(width=0),\n",
    "            layer='below'\n",
    "        ))\n",
    "        \n",
    "    shapes += [\n",
    "        dict(type='rect', x0=0, y0=0, x1=100, y1=60, line=dict(color='white')),  # Borde\n",
    "        dict(type='line', x0=50, x1=50, y0=0, y1=60, line=dict(color='white')),  # Medio campo\n",
    "        dict(type='circle', x0=50 - 9.15, y0=30 - 9.15, x1=50 + 9.15, y1=30 + 9.15, line=dict(color='white')),  # círculo central\n",
    "        dict(type='circle', x0=50 - 0.3, y0=30 - 0.3, x1=50 + 0.3, y1=30 + 0.3, fillcolor='white', line=dict(color='white')),  # punto central\n",
    "\n",
    "        # Área izquierda\n",
    "        dict(type='rect', x0=0, y0=13.85, x1=16.5, y1=46.15, line=dict(color='white')),\n",
    "        dict(type='rect', x0=0, y0=24.84, x1=5.5, y1=35.16, line=dict(color='white')),\n",
    "        dict(type='circle', x0=11 - 0.3, y0=30 - 0.3, x1=11 + 0.3, y1=30 + 0.3, fillcolor='white', line=dict(color='white')),\n",
    "\n",
    "        # Área derecha\n",
    "        dict(type='rect', x0=83.5, y0=13.85, x1=100, y1=46.15, line=dict(color='white')),\n",
    "        dict(type='rect', x0=94.5, y0=24.84, x1=100, y1=35.16, line=dict(color='white')),\n",
    "        dict(type='circle', x0=89 - 0.3, y0=30 - 0.3, x1=89 + 0.3, y1=30 + 0.3, fillcolor='white', line=dict(color='white')),\n",
    "\n",
    "        # Porterías\n",
    "        dict(type='rect', x0=-1, x1=0, y0=26.5, y1=33.5, line=dict(color='white'), fillcolor='white'),\n",
    "        dict(type='rect', x0=100, x1=101, y0=26.5, y1=33.5, line=dict(color='white'), fillcolor='white'),\n",
    "\n",
    "        # Banderines de esquina\n",
    "        dict(type='circle', x0=-0.3, y0=-0.3, x1=0.3, y1=0.3, fillcolor='white', line=dict(color='white')),\n",
    "        dict(type='circle', x0=-0.3, y0=59.7, x1=0.3, y1=60.3, fillcolor='white', line=dict(color='white')),\n",
    "        dict(type='circle', x0=99.7, y0=-0.3, x1=100.3, y1=0.3, fillcolor='white', line=dict(color='white')),\n",
    "        dict(type='circle', x0=99.7, y0=59.7, x1=100.3, y1=60.3, fillcolor='white', line=dict(color='white')),\n",
    "\n",
    "        # Semicírculo del área izquierda\n",
    "        dict(type=\"path\", path=\"M 16.5 36 A 6 6 0 0 1 16.5 24\", line=dict(color=\"white\")),\n",
    "        # Semicírculo del área derecha\n",
    "        dict(type=\"path\", path=\"M 83.5 24 A 6 6 0 0 1 83.5 36\", line=dict(color=\"white\")),\n",
    "    ]\n",
    "\n",
    "    fig.update_layout(\n",
    "        title=dict(text=f\"Mapa de tiros - {equipo}\", x=0.5),\n",
    "        showlegend=True,\n",
    "        plot_bgcolor='#3d642d',\n",
    "        paper_bgcolor='rgba(0,0,0,0)',\n",
    "        shapes=shapes,\n",
    "        xaxis=dict(range=[-5, 105], visible=False, scaleanchor='y', scaleratio=1),\n",
    "        yaxis=dict(range=[-5, 65], visible=False),\n",
    "        margin=dict(l=0, r=0, t=30, b=0),\n",
    "        width=900,\n",
    "        height=540\n",
    "    )\n",
    "\n",
    "    return fig\n",
    "\n",
    "#################################\n",
    "# FUNCIÓN PARA DETERMINAR EL % DE ATAQUES POR CADA BANDA\n",
    "#################################\n",
    "\n",
    "def porcentajes_ataques(df, equipo=\"Real Madrid CF\"):\n",
    "    eventos_tiro = ['saved shot', 'goal', 'miss', 'shot on post', 'blocked shot']\n",
    "    tiros = df[\n",
    "        (df['event_clean'].isin(eventos_tiro)) &\n",
    "        (df['team_name'] == equipo)\n",
    "    ].copy()\n",
    "\n",
    "    zona_contador = {'izquierda': 0, 'centro': 0, 'derecha': 0}\n",
    "    total_rutas = 0\n",
    "\n",
    "    for tiro_idx in tiros.index:\n",
    "        inicio_idx = max(tiro_idx - 10, 0)\n",
    "        secuencia = df.loc[inicio_idx:tiro_idx]\n",
    "\n",
    "        pases = secuencia[(secuencia['event_clean'] == 'pass') &\n",
    "                          (secuencia['team_name'] == equipo)]\n",
    "\n",
    "        if pases.empty:\n",
    "            continue\n",
    "\n",
    "        x = pases.iloc[0]['x']\n",
    "        y = pases.iloc[0]['y']\n",
    "\n",
    "        if x > 50:\n",
    "            x = 100 - x\n",
    "            y = 100 - y\n",
    "\n",
    "        if y >= 66.6:\n",
    "            zona_contador['izquierda'] += 1\n",
    "        elif y <= 33.3:\n",
    "            zona_contador['derecha'] += 1\n",
    "        else:\n",
    "            zona_contador['centro'] += 1\n",
    "\n",
    "        total_rutas += 1\n",
    "\n",
    "    if total_rutas == 0:\n",
    "        return {'izquierda': 0.0, 'centro': 0.0, 'derecha': 0.0}\n",
    "\n",
    "    return {zona: (count / total_rutas * 100) for zona, count in zona_contador.items()}\n",
    "\n",
    "import matplotlib.patheffects as path_effects\n",
    "\n",
    "#################################\n",
    "# CREACIÓN DE MAPA DE ATAQUE POR ZONAS\n",
    "#################################\n",
    "\n",
    "def mapa_zonas_ataque(porcentajes, equipo=\"Real Madrid CF\"):\n",
    "    fig, ax = plt.subplots(figsize=(12, 7))\n",
    "\n",
    "    for i in range(12):\n",
    "        color = '#3a5f2d' if i % 2 == 0 else '#3d642d'\n",
    "        ax.add_patch(Rectangle((i * (100 / 12), 0), 100 / 12, 60, color=color))\n",
    "\n",
    "    ax.plot([0, 0, 100, 100, 0], [0, 60, 60, 0, 0], color='white', linewidth=2)\n",
    "    ax.plot([50, 50], [0, 60], color='white', linewidth=1.5)\n",
    "    ax.add_patch(plt.Circle((50, 30), 9.15, edgecolor='white', facecolor='none', linewidth=1.5))\n",
    "    ax.add_patch(plt.Circle((50, 30), 0.3, color='white'))\n",
    "\n",
    "    zonas = {\n",
    "        'izquierda': {'y': 52, 'color': 'red'},\n",
    "        'centro': {'y': 30, 'color': 'yellow'},\n",
    "        'derecha': {'y': 8, 'color': 'blue'}\n",
    "    }\n",
    "    xs = list(range(10, 91, 20))  \n",
    "\n",
    "    for zona, props in zonas.items():\n",
    "        for x in xs:\n",
    "            ax.plot([x, x + 3, x, x + 3],\n",
    "                    [props['y'] - 3, props['y'], props['y'] + 3, props['y']],\n",
    "                    color=props['color'], linewidth=2)\n",
    "\n",
    "    texto_zona = {'izquierda': (96, 52), 'centro': (96, 30), 'derecha': (96, 8)}\n",
    "    for zona, (x, y) in texto_zona.items():\n",
    "        ax.text(x, y, f\"{porcentajes[zona]:.1f}%\", fontsize=16, color='white',\n",
    "                ha='center', va='center',\n",
    "                path_effects=[path_effects.Stroke(linewidth=2, foreground='black'), path_effects.Normal()])\n",
    "\n",
    "    ax.set_xlim(0, 100)\n",
    "    ax.set_ylim(0, 60)\n",
    "    ax.axis('off')\n",
    "    plt.tight_layout()\n",
    "\n",
    "    buffer = BytesIO()\n",
    "    plt.savefig(buffer, format='png', dpi=150, bbox_inches='tight', facecolor=fig.get_facecolor())\n",
    "    buffer.seek(0)\n",
    "    img_base64 = base64.b64encode(buffer.read()).decode()\n",
    "    plt.close(fig)\n",
    "    return f\"data:image/png;base64,{img_base64}\"\n",
    "\n",
    "#################################\n",
    "# CREACIÓN DE TABLA DE COMBINACIONES DE PASES\n",
    "#################################\n",
    "\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from io import BytesIO\n",
    "\n",
    "import plotly.express as px\n",
    "\n",
    "def mapa_calor_combinaciones_pases(df, equipo):\n",
    "    df = df[(df['event_clean'] == 'pass') & (df['team_name'] == equipo)].copy()\n",
    "    df = df.sort_values(by=['period_id', 'time_min', 'time_sec']).reset_index(drop=True)\n",
    "    df['receiver'] = df['player_name'].shift(-1)\n",
    "    df['next_team'] = df['team_name'].shift(-1)\n",
    "    df.loc[df['team_name'] != df['next_team'], 'receiver'] = None\n",
    "    df = df[df['receiver'].notnull()]\n",
    "\n",
    "    combinaciones = df.groupby(['player_name', 'receiver']).size().reset_index(name='pases')\n",
    "    combinaciones = combinaciones.pivot(index='receiver', columns='player_name', values='pases').fillna(0)\n",
    "\n",
    "    fig = px.imshow(\n",
    "        combinaciones,\n",
    "        text_auto=True,\n",
    "        color_continuous_scale='YlOrRd',\n",
    "        aspect=\"auto\",\n",
    "        labels=dict(x=\"Pasador\", y=\"Receptor\", color=\"Pases\"),\n",
    "        title=f\"Matriz De Calor De Pases Entre Jugadores - {equipo}\"\n",
    "    )\n",
    "\n",
    "    fig.update_layout(\n",
    "        title_x=0.5,\n",
    "        margin=dict(l=60, r=60, t=60, b=60),\n",
    "        height=400,\n",
    "        coloraxis_colorbar=dict(title=\"Pases\"),\n",
    "        font=dict(size=12)\n",
    "    )\n",
    "\n",
    "    return fig\n",
    "\n",
    "#################################\n",
    "# CREACIÓN DE GRÁFICO CÓRNERS\n",
    "#################################\n",
    "\n",
    "def grafico_corners(df, equipo):\n",
    "    import plotly.graph_objects as go\n",
    "\n",
    "    df_sorted = df.sort_values('Unnamed: 0').reset_index(drop=True)\n",
    "    eq_norm = normalizar_nombre(equipo)\n",
    "\n",
    "    corner_idx = df_sorted[\n",
    "        (df_sorted['event'].str.lower() == 'pass') &\n",
    "        (df_sorted['Corner taken'] == 1) &\n",
    "        (df_sorted['team_name'].apply(normalizar_nombre) == eq_norm)\n",
    "    ].index\n",
    "\n",
    "    recepciones = []\n",
    "    for idx in corner_idx:\n",
    "        try:\n",
    "            r = df_sorted.loc[idx + 1]\n",
    "            sig = df_sorted.loc[idx + 2]\n",
    "            x = r['x']\n",
    "            y = r['y']\n",
    "            if x < 50:\n",
    "                x = 100 - x\n",
    "                y = 100 - y\n",
    "            y = y * 60 / 100\n",
    "            recepciones.append({\n",
    "                'x': x,\n",
    "                'y': y,\n",
    "                'team': normalizar_nombre(r['team_name']),\n",
    "                'player': r['player_name'],\n",
    "                'accion': r['event'],\n",
    "                'asistencia': (\n",
    "                    sig['event'].lower() == 'goal' and\n",
    "                    normalizar_nombre(sig['team_name']) == eq_norm\n",
    "                )\n",
    "            })\n",
    "        except:\n",
    "            continue\n",
    "\n",
    "    equipo_x, equipo_y, equipo_hover, equipo_symbol = [], [], [], []\n",
    "    rival_x, rival_y, rival_hover = [], [], []\n",
    "\n",
    "    for r in recepciones:\n",
    "        hover = f\"{r['player']}<br>{r['accion']}\"\n",
    "        if r['asistencia']:\n",
    "            hover += \"<br><b>Asistencia de gol</b>\"\n",
    "\n",
    "        if r['team'] == eq_norm:\n",
    "            equipo_x.append(r['x'])\n",
    "            equipo_y.append(r['y'])\n",
    "            equipo_hover.append(hover)\n",
    "            equipo_symbol.append('star' if r['asistencia'] else 'circle')\n",
    "        else:\n",
    "            rival_x.append(r['x'])\n",
    "            rival_y.append(r['y'])\n",
    "            rival_hover.append(hover)\n",
    "\n",
    "    fig = go.Figure()\n",
    "\n",
    "    fig.add_trace(go.Scatter(\n",
    "        x=equipo_x,\n",
    "        y=equipo_y,\n",
    "        mode='markers',\n",
    "        marker=dict(color='blue', size=12, symbol=equipo_symbol),\n",
    "        name=equipo,\n",
    "        hovertext=equipo_hover,\n",
    "        hoverinfo='text',\n",
    "        showlegend=True\n",
    "    ))\n",
    "\n",
    "    fig.add_trace(go.Scatter(\n",
    "        x=rival_x,\n",
    "        y=rival_y,\n",
    "        mode='markers',\n",
    "        marker=dict(color='red', size=10),\n",
    "        name='Rival',\n",
    "        hovertext=rival_hover,\n",
    "        hoverinfo='text',\n",
    "        showlegend=True\n",
    "    ))\n",
    "\n",
    "    shapes = []\n",
    "    for i in range(12):\n",
    "        shapes.append(dict(\n",
    "            type='rect',\n",
    "            x0=i * (100 / 12), x1=(i + 1) * (100 / 12),\n",
    "            y0=0, y1=60,\n",
    "            fillcolor='#3a5f2d' if i % 2 == 0 else '#3d642d',\n",
    "            line=dict(width=0),\n",
    "            layer='below'\n",
    "        ))\n",
    "\n",
    "    shapes += [\n",
    "        dict(type='rect', x0=0, y0=0, x1=100, y1=60, line=dict(color='white')),\n",
    "        dict(type='line', x0=50, x1=50, y0=0, y1=60, line=dict(color='white')),\n",
    "        dict(type='circle', x0=40.85, y0=20.85, x1=59.15, y1=39.15, line=dict(color='white')),\n",
    "        dict(type='circle', x0=49.7, y0=29.7, x1=50.3, y1=30.3, fillcolor='white', line=dict(color='white')),\n",
    "        dict(type='rect', x0=0, y0=13.85, x1=16.5, y1=46.15, line=dict(color='white')),\n",
    "        dict(type='rect', x0=0, y0=24.84, x1=5.5, y1=35.16, line=dict(color='white')),\n",
    "        dict(type='circle', x0=10.7, y0=29.7, x1=11.3, y1=30.3, fillcolor='white', line=dict(color='white')),\n",
    "        dict(type='rect', x0=83.5, y0=13.85, x1=100, y1=46.15, line=dict(color='white')),\n",
    "        dict(type='rect', x0=94.5, y0=24.84, x1=100, y1=35.16, line=dict(color='white')),\n",
    "        dict(type='circle', x0=88.7, y0=29.7, x1=89.3, y1=30.3, fillcolor='white', line=dict(color='white')),\n",
    "        dict(type='path', path=\"M 16.5 36 A 6 6 0 0 1 16.5 24\", line=dict(color='white')),\n",
    "        dict(type='path', path=\"M 83.5 24 A 6 6 0 0 1 83.5 36\", line=dict(color='white')),\n",
    "    ]\n",
    "\n",
    "    fig.update_layout(\n",
    "        title=dict(text=f\"Recepciones tras córners ejecutados por {equipo}\", x=0.5, font=dict(color='black', size=15)),\n",
    "        shapes=shapes,\n",
    "        xaxis=dict(range=[-5, 105], visible=False),\n",
    "        yaxis=dict(range=[-5, 65], visible=False, scaleanchor='x', scaleratio=1),\n",
    "        plot_bgcolor='#3a5f2d',\n",
    "        margin=dict(l=0, r=0, t=30, b=0),\n",
    "        width=700,\n",
    "        height=340,\n",
    "        legend=dict(\n",
    "            orientation=\"v\",\n",
    "            yanchor=\"middle\",\n",
    "            y=0.5,\n",
    "            xanchor=\"left\",\n",
    "            x=1.01,\n",
    "            font=dict(color='black')\n",
    "        )\n",
    "    )\n",
    "\n",
    "    return dcc.Graph(figure=fig)\n",
    "\n",
    "#################################\n",
    "# CREACIÓN DE GRÁFICO PORTERÍA\n",
    "#################################\n",
    "\n",
    "\n",
    "import plotly.graph_objects as go\n",
    "\n",
    "def grafico_porteria(df, equipo=\"Real Madrid CF\"):\n",
    "    df = df[df['team_name'].str.lower() == equipo.lower()]\n",
    "    df['event'] = df['event'].astype(str).str.lower().str.strip()\n",
    "    df = df[df['event'] != 'deleted event']\n",
    "\n",
    "    colores_evento = {\n",
    "        \"goal\": \"white\",\n",
    "        \"miss\": \"red\",\n",
    "        \"saved shot\": \"orange\",\n",
    "        \"shot on post\": \"yellow\",\n",
    "        \"blocked shot\": \"pink\"\n",
    "    }\n",
    "\n",
    "    fig = go.Figure()\n",
    "\n",
    "    # Dibujar zonas\n",
    "    zones = [\n",
    "        {\"x0\": 51.8, \"x1\": 54.8, \"y0\": 0, \"y1\": 20, \"color\": \"rgba(0,0,255,0.2)\"},\n",
    "        {\"x0\": 51.8, \"x1\": 54.8, \"y0\": 20, \"y1\": 38, \"color\": \"rgba(0,0,255,0.2)\"},\n",
    "        {\"x0\": 48.2, \"x1\": 51.8, \"y0\": 0, \"y1\": 20, \"color\": \"rgba(0,0,255,0.2)\"},\n",
    "        {\"x0\": 48.2, \"x1\": 51.8, \"y0\": 20, \"y1\": 38, \"color\": \"rgba(0,0,255,0.2)\"},\n",
    "        {\"x0\": 45.2, \"x1\": 48.2, \"y0\": 0, \"y1\": 20, \"color\": \"rgba(0,0,255,0.2)\"},\n",
    "        {\"x0\": 45.2, \"x1\": 48.2, \"y0\": 20, \"y1\": 38, \"color\": \"rgba(0,0,255,0.2)\"},\n",
    "        {\"x0\": 54.8, \"x1\": 55.8, \"y0\": 0, \"y1\": 38, \"color\": \"white\"},\n",
    "        {\"x0\": 44.2, \"x1\": 55.8, \"y0\": 38, \"y1\": 42, \"color\": \"white\"},\n",
    "        {\"x0\": 44.2, \"x1\": 45.2, \"y0\": 0, \"y1\": 38, \"color\": \"white\"},\n",
    "    ]\n",
    "\n",
    "    for z in zones:\n",
    "        fig.add_shape(\n",
    "            type=\"rect\",\n",
    "            x0=z[\"x0\"], x1=z[\"x1\"], y0=z[\"y0\"], y1=z[\"y1\"],\n",
    "            fillcolor=z[\"color\"],\n",
    "            line=dict(width=0)\n",
    "        )\n",
    "\n",
    "    for i, x in enumerate(range(30, 70, 3)):\n",
    "        fig.add_shape(\n",
    "            type=\"rect\",\n",
    "            x0=x,\n",
    "            x1=min(x + 2.5, 70),\n",
    "            y0=-5,\n",
    "            y1=105,\n",
    "            fillcolor=\"rgba(50,80,50,0.15)\" if i % 2 == 0 else \"rgba(70,100,70,0.15)\",\n",
    "            line=dict(width=0),\n",
    "            layer=\"below\"\n",
    "        )\n",
    "\n",
    "    fig.add_shape(\n",
    "        type=\"line\",\n",
    "        x0=30, x1=70, y0=0, y1=0,\n",
    "        line=dict(color=\"white\", width=2)\n",
    "    )\n",
    "\n",
    "    df[\"evento_mostrar\"] = df[\"event\"].apply(lambda x: \"⚽ goal\" if x == \"goal\" else x)\n",
    "    hover_text = (\n",
    "        \"Jugador: \" + df[\"player_name\"] +\n",
    "        \"<br>Minuto: \" + df[\"time_min\"].astype(str) +\n",
    "        \"<br>Evento: \" + df[\"evento_mostrar\"]\n",
    "    )\n",
    "\n",
    "    fig.add_trace(go.Scatter(\n",
    "        x=df[\"Goal Mouth Y Coordinate\"],\n",
    "        y=df[\"Goal Mouth Z Coordinate\"],\n",
    "        mode=\"markers\",\n",
    "        marker=dict(\n",
    "            color=df[\"event\"].map(colores_evento),\n",
    "            size=8\n",
    "        ),\n",
    "        text=hover_text,\n",
    "        hoverinfo=\"text\",\n",
    "        name=\"Tiros RM\"\n",
    "    ))\n",
    "\n",
    "    fig.update_layout(\n",
    "        title=\"Tiros del Real Madrid en portería\",\n",
    "        height=500,\n",
    "        xaxis=dict(range=[65, 35], showgrid=False, zeroline=False, visible=False),\n",
    "        yaxis=dict(range=[-5, 105], showgrid=False, zeroline=False, visible=False),\n",
    "        plot_bgcolor=\"#3b5f3b\",\n",
    "        margin=dict(l=10, r=10, t=50, b=10)\n",
    "    )\n",
    "\n",
    "    return fig\n",
    "\n",
    "#################################\n",
    "# FUNCIÓN PARA REDUCIR EL TAMAÑO DE LA PORTERÍA\n",
    "#################################\n",
    "    \n",
    "def grafico_porteria_reducido(df, equipo=\"Real Madrid CF\"):\n",
    "    df = df.copy()\n",
    "    df['event'] = df['event'].astype(str).str.lower().str.strip()\n",
    "    df = df[df['event'] != 'deleted']\n",
    "    fig = grafico_porteria(df, equipo)\n",
    "\n",
    "    fig.update_layout(\n",
    "        title=None,\n",
    "        width=750,\n",
    "        height=400,\n",
    "        margin=dict(l=0, r=0, t=0, b=0),\n",
    "        showlegend=False\n",
    "    )\n",
    "\n",
    "    return fig\n",
    "\n",
    "#################################\n",
    "# FUNCIÓN PARA ANALIZAR BALÓN PARADO\n",
    "#################################\n",
    "    \n",
    "def post_faltas(df, equipo='Real Madrid CF', ventana_eventos=5):\n",
    "    faltas = faltas_a_favor_en_campo_rival(df, equipo)\n",
    "    resultados = {'tiro': 0, 'perdida': 0, 'nada': 0}\n",
    "\n",
    "    eq = normalizar_nombre(equipo)\n",
    "    df['event_clean'] = df['event'].astype(str).str.lower().str.strip()\n",
    "    df['team_name_clean'] = df['team_name'].apply(normalizar_nombre)\n",
    "\n",
    "    eventos_tiro = ['goal', 'saved shot', 'miss', 'shot on post', 'blocked shot']\n",
    "    eventos_perdida = ['interception', 'ball recovery', 'foul', 'clearance', 'out', 'save']\n",
    "\n",
    "    for idx in faltas.index:\n",
    "        post = df.loc[idx + 1: idx + ventana_eventos]\n",
    "\n",
    "        equipo_post = post['team_name_clean'].values\n",
    "        eventos = post['event_clean'].values\n",
    "\n",
    "        if any((e in eventos_tiro and t == eq) for e, t in zip(eventos, equipo_post)):\n",
    "            resultados['tiro'] += 1\n",
    "        elif any((t != eq and e in eventos_perdida) for e, t in zip(eventos, equipo_post)):\n",
    "            resultados['perdida'] += 1\n",
    "        else:\n",
    "            resultados['nada'] += 1\n",
    "\n",
    "    total = sum(resultados.values())\n",
    "    for k in resultados:\n",
    "        resultados[k] = {\n",
    "            \"total\": resultados[k],\n",
    "            \"porcentaje\": f\"{(resultados[k] / total * 100):.1f}%\" if total else \"0.0%\"\n",
    "        }\n",
    "\n",
    "    return resultados\n",
    "\n",
    "def faltas_a_favor_en_campo_rival(df, equipo='Real Madrid CF'):\n",
    "    df['event_clean'] = df['event'].astype(str).str.lower().str.strip()\n",
    "    df['team_name_clean'] = df['team_name'].apply(normalizar_nombre)\n",
    "\n",
    "    eq = normalizar_nombre(equipo)\n",
    "\n",
    "    return df[\n",
    "        (df['event_clean'] == 'foul') &\n",
    "        (df['team_name_clean'] == eq) &\n",
    "        (df['outcome'].astype(str) == '1') &  # faltas recibidas\n",
    "        (df['x'] > 50)  # campo rival\n",
    "    ].copy()\n",
    "\n",
    "def tiros_tras_evento(df, equipo, evento_inicial, filtro_extra=None, ventana_eventos=5):\n",
    "    eq = normalizar_nombre(equipo)\n",
    "    df['event_clean'] = df['event'].astype(str).str.strip().str.lower()\n",
    "    df['team_name_clean'] = df['team_name'].apply(normalizar_nombre)\n",
    "\n",
    "    if filtro_extra:\n",
    "        evento_df = df[filtro_extra(df) & (df['team_name_clean'] == eq)].copy()\n",
    "    else:\n",
    "        evento_df = df[(df['event_clean'] == evento_inicial) & (df['team_name_clean'] == eq)].copy()\n",
    "\n",
    "    tiros = 0\n",
    "    eventos_tiro = ['goal', 'saved shot', 'miss', 'shot on post', 'blocked shot']\n",
    "\n",
    "    for idx in evento_df.index:\n",
    "        post = df.loc[idx + 1: idx + ventana_eventos]\n",
    "        post = post[post['team_name_clean'] == eq]\n",
    "\n",
    "        if any(post['event_clean'].isin(eventos_tiro)):\n",
    "            tiros += 1\n",
    "\n",
    "    return tiros\n",
    "\n",
    "def filtro_falta_campo_rival(df):\n",
    "    return (\n",
    "        (df['event'].astype(str).str.lower().str.strip() == 'foul') &\n",
    "        (df['outcome'].astype(str) == '1') &\n",
    "        (df['x'] > 50)\n",
    "    )\n",
    "\n",
    "def filtro_saque_banda(df):\n",
    "    if \"Throw In\" not in df.columns:\n",
    "        return pd.Series([False] * len(df))\n",
    "    return df[\"Throw In\"] == 1\n",
    "\n",
    "def tabla_tiros_balon_parado(df, equipo):\n",
    "    tiros_falta = tiros_tras_evento(df, equipo, \"foul\", filtro_extra=filtro_falta_campo_rival)\n",
    "    tiros_corner = tiros_tras_evento(df, equipo, \"corner awarded\")\n",
    "    tiros_saque_banda = tiros_tras_evento(df, equipo, \"pass\", filtro_extra=filtro_saque_banda)\n",
    "\n",
    "    rows = [\n",
    "        html.Tr([\n",
    "            html.Td(\"Falta\", style={'padding': '8px'}),\n",
    "            html.Td(str(tiros_falta), style={'padding': '8px', 'textAlign': 'center'})\n",
    "        ]),\n",
    "        html.Tr([\n",
    "            html.Td(\"Córner\", style={'padding': '8px'}),\n",
    "            html.Td(str(tiros_corner), style={'padding': '8px', 'textAlign': 'center'})\n",
    "        ]),\n",
    "        html.Tr([\n",
    "            html.Td(\"Saque de Banda\", style={'padding': '8px'}),\n",
    "            html.Td(str(tiros_saque_banda), style={'padding': '8px', 'textAlign': 'center'})\n",
    "        ])\n",
    "    ]\n",
    "\n",
    "    return html.Table([\n",
    "        html.Thead(html.Tr([\n",
    "            html.Th(\"Situación\", style={'backgroundColor': '#f2f2f2', 'padding': '10px'}),\n",
    "            html.Th(\"Tiros\", style={'backgroundColor': '#f2f2f2', 'padding': '10px', 'textAlign': 'center'})\n",
    "        ])),\n",
    "        html.Tbody(rows)\n",
    "    ], style={\n",
    "        'width': '100%',\n",
    "        'margin': 'auto',\n",
    "        'marginTop': '10px',\n",
    "        'borderCollapse': 'collapse',\n",
    "        'fontFamily': 'Arial, sans-serif',\n",
    "        'backgroundColor': '#fff',\n",
    "        'boxShadow': '0 2px 6px rgba(0,0,0,0.1)',\n",
    "        'borderRadius': '8px',\n",
    "        'overflow': 'hidden'\n",
    "    })\n",
    "\n",
    "#################################\n",
    "# TABLA ANÁLSIS DE ABRIL (EQUIPO)\n",
    "#################################\n",
    "\n",
    "def tabla_estadisticas_abril():\n",
    "    import os\n",
    "    import pandas as pd\n",
    "\n",
    "    carpeta = \"/Users/jaimegimenez/Desktop/TFM/Partidos_CSV\"\n",
    "    archivos = [f for f in os.listdir(carpeta) if f.endswith(\".csv\")]\n",
    "\n",
    "    estadisticas_rm = {\n",
    "        'Pases Totales': 0, 'Pases Completados': 0, 'Tiros Totales': 0,\n",
    "        'Tiros a Puerta': 0, 'Fueras de Juego': 0, 'Córners': 0,\n",
    "        'Tarjetas Recibidas': 0, 'Goles': 0\n",
    "    }\n",
    "\n",
    "    estadisticas_otros = estadisticas_rm.copy()\n",
    "\n",
    "    for archivo in archivos:\n",
    "        path = os.path.join(carpeta, archivo)\n",
    "        df = pd.read_csv(path)\n",
    "\n",
    "        if 'team_name' not in df.columns or 'type_id' not in df.columns:\n",
    "            continue\n",
    "\n",
    "        df['own goal'] = pd.to_numeric(df.get('own goal', 0), errors='coerce').fillna(0)\n",
    "\n",
    "        df_rm = df[df['team_name'].str.contains(\"Real Madrid\", case=False, na=False)]\n",
    "        df_otros = df[~df['team_name'].str.contains(\"Real Madrid\", case=False, na=False)]\n",
    "\n",
    "        for df_temp, stats in [(df_rm, estadisticas_rm), (df_otros, estadisticas_otros)]:\n",
    "            stats['Pases Totales'] += len(df_temp[df_temp['type_id'] == 1])\n",
    "            stats['Pases Completados'] += len(df_temp[(df_temp['type_id'] == 1) & (df_temp['outcome'] == 1)])\n",
    "            stats['Tiros Totales'] += len(df_temp[df_temp['type_id'].isin([13, 14, 15, 16])])\n",
    "            stats['Tiros a Puerta'] += len(df_temp[df_temp['type_id'].isin([15, 16])])\n",
    "            stats['Goles'] += len(df_temp[(df_temp['type_id'] == 16) & (df_temp['own goal'] != 1.0)].drop_duplicates(subset=['event_id', 'player_id']))\n",
    "            stats['Fueras de Juego'] += len(df_temp[df_temp['type_id'] == 2])\n",
    "            stats['Tarjetas Recibidas'] += len(df_temp[df_temp['type_id'] == 17])\n",
    "            if 'Corner taken' in df_temp.columns:\n",
    "                corners = pd.to_numeric(df_temp['Corner taken'], errors='coerce').fillna(0)\n",
    "                stats['Córners'] += corners.astype(int).sum()\n",
    "\n",
    "    rows = []\n",
    "    for key in estadisticas_rm:\n",
    "        val_rm = estadisticas_rm[key]\n",
    "        val_otro = estadisticas_otros[key]\n",
    "        rows.append(html.Tr([\n",
    "            html.Td(key, style={'padding': '10px'}),\n",
    "            html.Td(val_rm, style={'padding': '10px', 'textAlign': 'center'}),\n",
    "            html.Td(val_otro, style={'padding': '10px', 'textAlign': 'center'})\n",
    "        ]))\n",
    "\n",
    "    filas = []\n",
    "    for key in estadisticas_rm:\n",
    "        val_rm = estadisticas_rm[key]\n",
    "        val_otro = estadisticas_otros[key]\n",
    "\n",
    "        color_rm = 'green' if val_rm > val_otro else ('black' if val_rm < val_otro else 'green')\n",
    "        color_otro = 'green' if val_otro > val_rm else ('black' if val_otro < val_rm else 'green')\n",
    "\n",
    "        filas.append(html.Tr([\n",
    "            html.Td(key, style={'padding': '12px', 'textAlign': 'left', 'fontWeight': 'bold'}),\n",
    "            html.Td(val_rm, style={'padding': '12px', 'textAlign': 'center', 'color': color_rm}),\n",
    "            html.Td(val_otro, style={'padding': '12px', 'textAlign': 'center', 'color': color_otro})\n",
    "        ], style={'borderBottom': '1px solid #ccc'}))\n",
    "\n",
    "    header = html.Tr([\n",
    "        html.Th(\"Estadística\", style={'padding': '14px', 'textAlign': 'left', 'fontSize': '18px'}),\n",
    "        html.Th(\"Real Madrid\", style={'padding': '14px', 'textAlign': 'center', 'fontSize': '18px'}),\n",
    "        html.Th(\"Rivales\", style={'padding': '14px', 'textAlign': 'center', 'fontSize': '18px'})\n",
    "    ])\n",
    "\n",
    "    return html.Div([\n",
    "        html.H3(\"Comparativa mes de abril\", style={'textAlign': 'center', 'marginTop': '40px'}),\n",
    "        html.Table([\n",
    "            html.Thead(header),\n",
    "            html.Tbody(filas)\n",
    "        ], style={\n",
    "            'width': '90%',\n",
    "            'margin': '0 auto',\n",
    "            'borderCollapse': 'collapse',\n",
    "            'fontFamily': 'Arial, sans-serif',\n",
    "            'backgroundColor': '#fff',\n",
    "            'boxShadow': '0 4px 12px rgba(0,0,0,0.1)',\n",
    "            'borderRadius': '8px',\n",
    "            'overflow': 'hidden'\n",
    "        })\n",
    "    ])\n",
    "\n",
    "#################################\n",
    "# TABLA ANÁLSIS DE ABRIL (JUGADORES)\n",
    "#################################\n",
    "\n",
    "from dash import html, dash_table\n",
    "import pandas as pd\n",
    "import os\n",
    "\n",
    "def tabla_estadisticas_jugadores_abril():\n",
    "    carpeta = \"/Users/jaimegimenez/Desktop/TFM/Partidos_CSV\"\n",
    "    archivos = [f for f in os.listdir(carpeta) if f.endswith(\".csv\")]\n",
    "\n",
    "    nombres_porteros = [\"T. Courtois\", \"A. Lunin\", \"Fran González\"]\n",
    "    estadisticas = {}\n",
    "\n",
    "    def nueva_fila(jugador, es_portero=False):\n",
    "        base = {\n",
    "            'Minutos Jugados': 0,\n",
    "            'Pases Totales': 0,\n",
    "            'Pases Completados': 0,\n",
    "            'Tiros Totales': 0,\n",
    "            'Tiros a Puerta': 0,\n",
    "            'Goles': 0,\n",
    "            'Regates Intentados': 0,\n",
    "            'Regates Exitosos': 0,\n",
    "            'Recuperaciones': 0,\n",
    "            'Duelos Aéreos Ganados': 0,\n",
    "            'Asistencias': 0,\n",
    "            'Tarjetas': 0,\n",
    "            'Paradas': 0,\n",
    "            'Rechaces inseguros': 0,\n",
    "            'Atrapadas': 0,\n",
    "            'Goles Encajados': 0\n",
    "        }\n",
    "        estadisticas[jugador] = base\n",
    "\n",
    "    for archivo in archivos:\n",
    "        path = os.path.join(carpeta, archivo)\n",
    "        df = pd.read_csv(path)\n",
    "\n",
    "        if 'team_name' not in df.columns or 'type_id' not in df.columns:\n",
    "            continue\n",
    "\n",
    "        df_rm = df[df['team_name'].str.contains(\"Real Madrid\", case=False, na=False)]\n",
    "        df_rival = df[~df['team_name'].str.contains(\"Real Madrid\", case=False, na=False)]\n",
    "\n",
    "        portero_partido = next((nombre for nombre in nombres_porteros if any(df_rm['player_name'].str.contains(nombre, case=False, na=False))), None)\n",
    "        if portero_partido:\n",
    "            if portero_partido not in estadisticas:\n",
    "                nueva_fila(portero_partido, es_portero=True)\n",
    "            goles_rival = df_rival[df_rival['type_id'] == 16]\n",
    "            estadisticas[portero_partido]['Goles Encajados'] += len(goles_rival)\n",
    "\n",
    "        columnas_tiempo = ['period_id', 'time_min', 'time_sec', 'event_id']\n",
    "        if all(col in df_rm.columns for col in columnas_tiempo):\n",
    "            df_rm_sorted = df_rm.sort_values(by=columnas_tiempo).reset_index(drop=True)\n",
    "            for i in range(1, len(df_rm_sorted)):\n",
    "                fila = df_rm_sorted.iloc[i]\n",
    "                anterior = df_rm_sorted.iloc[i - 1]\n",
    "                if fila['type_id'] == 16 and anterior['type_id'] in [1, 44] and anterior.get('outcome') == 1:\n",
    "                    if fila['team_name'].lower() == anterior['team_name'].lower():\n",
    "                        asistente = anterior['player_name']\n",
    "                        if isinstance(asistente, str):\n",
    "                            if asistente not in estadisticas:\n",
    "                                nueva_fila(asistente)\n",
    "                            estadisticas[asistente]['Asistencias'] += 1\n",
    "\n",
    "        for jugador, grupo in df_rm.groupby('player_name'):\n",
    "            if not isinstance(jugador, str):\n",
    "                continue\n",
    "            es_portero = any(nombre.lower() in jugador.lower() for nombre in nombres_porteros)\n",
    "            if jugador not in estadisticas:\n",
    "                nueva_fila(jugador, es_portero)\n",
    "\n",
    "            if {'time_min', 'period_id'}.issubset(grupo.columns):\n",
    "                tiempo_jugado = (\n",
    "                    grupo.groupby('period_id')\n",
    "                    .apply(lambda x: x['time_min'].max() - x['time_min'].min() + 1)\n",
    "                    .sum()\n",
    "                )\n",
    "                estadisticas[jugador]['Minutos Jugados'] += tiempo_jugado\n",
    "\n",
    "            for _, row in grupo.iterrows():\n",
    "                tipo = row['type_id']\n",
    "                outcome = row.get('outcome')\n",
    "                qualifiers = str(row.get('represented_qualifiers', ''))\n",
    "\n",
    "                if tipo == 1:\n",
    "                    estadisticas[jugador]['Pases Totales'] += 1\n",
    "                    if outcome == 1:\n",
    "                        estadisticas[jugador]['Pases Completados'] += 1\n",
    "\n",
    "                if es_portero:\n",
    "                    if tipo == 10:\n",
    "                        estadisticas[jugador]['Paradas'] += 1\n",
    "                        if any(q in qualifiers for q in ['90', '91', '173', '174']):\n",
    "                            estadisticas[jugador]['Rechaces inseguros'] += 1\n",
    "                        if any(q in qualifiers for q in ['92', '93', '176', '177']):\n",
    "                            estadisticas[jugador]['Atrapadas'] += 1\n",
    "                else:\n",
    "                    if tipo in [13, 14, 15, 16]:\n",
    "                        estadisticas[jugador]['Tiros Totales'] += 1\n",
    "                        if tipo in [15, 16]:\n",
    "                            estadisticas[jugador]['Tiros a Puerta'] += 1\n",
    "                        if tipo == 16:\n",
    "                            estadisticas[jugador]['Goles'] += 1\n",
    "                    elif tipo == 3:\n",
    "                        estadisticas[jugador]['Regates Intentados'] += 1\n",
    "                        if outcome == 1:\n",
    "                            estadisticas[jugador]['Regates Exitosos'] += 1\n",
    "                    elif tipo == 49:\n",
    "                        estadisticas[jugador]['Recuperaciones'] += 1\n",
    "                    elif tipo == 44 and outcome == 1:\n",
    "                        estadisticas[jugador]['Duelos Aéreos Ganados'] += 1\n",
    "                    elif tipo == 17:\n",
    "                        estadisticas[jugador]['Tarjetas'] += 1\n",
    "\n",
    "    df_total = pd.DataFrame.from_dict(estadisticas, orient='index')\n",
    "\n",
    "    df_porteros = df_total[df_total.index.str.lower().str.contains('|'.join(n.lower() for n in nombres_porteros))]\n",
    "    columnas_portero = ['Minutos Jugados', 'Pases Totales', 'Pases Completados', 'Paradas',\n",
    "                        'Rechaces inseguros', 'Atrapadas', 'Goles Encajados']\n",
    "    df_porteros = df_porteros[columnas_portero].reset_index().rename(columns={'index': 'Jugador'})\n",
    "\n",
    "    df_campo = df_total.drop(df_porteros['Jugador'], errors='ignore')\n",
    "    df_campo = df_campo.reset_index().rename(columns={'index': 'Jugador'})\n",
    "    columnas_inutiles_campo = ['Paradas', 'Rechaces inseguros', 'Atrapadas', 'Goles Encajados']\n",
    "    df_campo = df_campo.drop(columns=columnas_inutiles_campo, errors='ignore')\n",
    "\n",
    "    \n",
    "    return html.Div([\n",
    "        html.H3(\"Estadísticas de Jugadores del Real Madrid\", style={'textAlign': 'center', 'marginTop': '40px'}),\n",
    "        dash_table.DataTable(\n",
    "            data=df_campo.to_dict('records'),\n",
    "            columns=[{\"name\": i, \"id\": i} for i in df_campo.columns],\n",
    "            sort_action=\"native\",\n",
    "            style_table={\n",
    "                'overflowX': 'auto',\n",
    "                'margin': '0 auto',\n",
    "                'width': '95%',\n",
    "                'boxShadow': '0 4px 12px rgba(0,0,0,0.1)',\n",
    "                'borderRadius': '8px'\n",
    "            },\n",
    "            style_header={\n",
    "                'backgroundColor': '#f9f9f9',\n",
    "                'fontWeight': 'bold',\n",
    "                'fontSize': '16px',\n",
    "                'borderBottom': '2px solid black'\n",
    "            },\n",
    "            style_cell={\n",
    "                'textAlign': 'center',\n",
    "                'fontFamily': 'Arial, sans-serif',\n",
    "                'padding': '10px'\n",
    "            },\n",
    "            style_data={\n",
    "                'borderBottom': '1px solid #ccc'\n",
    "            },\n",
    "            page_size=10\n",
    "        ),\n",
    "\n",
    "        html.H3(\"Estadísticas de Porteros del Real Madrid\", style={'textAlign': 'center', 'marginTop': '40px'}),\n",
    "        dash_table.DataTable(\n",
    "            data=df_porteros.to_dict('records'),\n",
    "            columns=[{\"name\": i, \"id\": i} for i in df_porteros.columns],\n",
    "            style_table={\n",
    "                'overflowX': 'auto',\n",
    "                'margin': '0 auto',\n",
    "                'width': '95%',\n",
    "                'boxShadow': '0 4px 12px rgba(0,0,0,0.1)',\n",
    "                'borderRadius': '8px'\n",
    "            },\n",
    "            style_header={\n",
    "                'backgroundColor': '#f9f9f9',\n",
    "                'fontWeight': 'bold',\n",
    "                'fontSize': '16px',\n",
    "                'borderBottom': '2px solid black'\n",
    "            },\n",
    "            style_cell={\n",
    "                'textAlign': 'center',\n",
    "                'fontFamily': 'Arial, sans-serif',\n",
    "                'padding': '10px'\n",
    "            },\n",
    "            style_data={\n",
    "                'borderBottom': '1px solid #ccc'\n",
    "            },\n",
    "            page_size=10\n",
    "        )\n",
    "    ])\n",
    "\n",
    "#################################\n",
    "# FUNCIONDES DE CONTAR PARA EL ANÁLSIS DE ABRIL \n",
    "#################################  \n",
    "\n",
    "def informe_partido(df, equipo1, equipo2):\n",
    "    eq1 = normalizar_nombre(equipo1)\n",
    "    eq2 = normalizar_nombre(equipo2)\n",
    "\n",
    "    def contar(evento, equipo, extra_filter=None):\n",
    "        base = df[(df['team_name_clean'] == equipo) & (df['event_clean'] == evento)]\n",
    "        if extra_filter:\n",
    "            base = base[extra_filter(base)]\n",
    "        return base.shape[0]\n",
    "\n",
    "    def contar_tiros(equipo, tipo=None):\n",
    "        tiros = ['goal', 'saved shot', 'miss', 'shot on post', 'blocked shot']\n",
    "        base = df[(df['team_name_clean'] == equipo) & (df['event_clean'].isin(tiros))]\n",
    "        if tipo == 'a_puerta':\n",
    "            base = base[df['event_clean'].isin(['goal', 'saved shot'])]\n",
    "        return base.shape[0]\n",
    "\n",
    "    def contar_centros(equipo):\n",
    "        return contar('cross', equipo)\n",
    "\n",
    "    def contar_pases_largos(equipo):\n",
    "        if 'Long Ball' in df.columns:\n",
    "            return df[(df['team_name_clean'] == equipo) & (df['Long Ball'] == 1)].shape[0]\n",
    "        return 0\n",
    "\n",
    "    def contar_intercepciones(equipo):\n",
    "        return contar('interception', equipo)\n",
    "\n",
    "    def contar_duelos_aereos(equipo):\n",
    "        return df[(df['team_name_clean'] == equipo) & (df['event_clean'] == 'aerial') & (df['outcome'] == '1')].shape[0]\n",
    "\n",
    "    def contar_entradas_ganadas(equipo):\n",
    "        return df[(df['team_name_clean'] == equipo) & (df['event_clean'] == 'challenge') & (df['outcome'] == '1')].shape[0]\n",
    "\n",
    "    def contar_duelos_suelo(equipo):\n",
    "        return df[(df['team_name_clean'] == equipo) & (df['event_clean'] == 'duel') & (df['outcome'] == '1')].shape[0]\n",
    "\n",
    "    def contar_recuperaciones(equipo):\n",
    "        return contar('ball recovery', equipo)\n",
    "\n",
    "    def porcentaje_pases_acertados(equipo):\n",
    "        pases_totales = contar('pass', equipo)\n",
    "        pases_buenos = df[(df['team_name_clean'] == equipo) & (df['event_clean'] == 'pass') & \n",
    "                          (~df['outcome'].astype(str).str.lower().isin(['0', 'fail', 'unsuccessful']))].shape[0]\n",
    "        return round(pases_buenos / pases_totales * 100, 1) if pases_totales else 0\n",
    "\n",
    "    resumen = {\n",
    "        eq1: {\n",
    "            \"tiros\": contar_tiros(eq1),\n",
    "            \"tiros_puerta\": contar_tiros(eq1, tipo='a_puerta'),\n",
    "            \"goles\": contar('goal', eq1),\n",
    "            \"centros\": contar_centros(eq1),\n",
    "            \"pases_largos\": contar_pases_largos(eq1),\n",
    "            \"intercepciones\": contar_intercepciones(eq1),\n",
    "            \"duelos_aereos\": contar_duelos_aereos(eq1),\n",
    "            \"entradas\": contar_entradas_ganadas(eq1),\n",
    "            \"duelos_suelo\": contar_duelos_suelo(eq1),\n",
    "            \"recuperaciones\": contar_recuperaciones(eq1),\n",
    "            \"pases_pct\": porcentaje_pases_acertados(eq1)\n",
    "        },\n",
    "        eq2: {\n",
    "            \"tiros\": contar_tiros(eq2),\n",
    "            \"tiros_puerta\": contar_tiros(eq2, tipo='a_puerta'),\n",
    "            \"goles\": contar('goal', eq2),\n",
    "            \"centros\": contar_centros(eq2),\n",
    "            \"pases_largos\": contar_pases_largos(eq2),\n",
    "            \"intercepciones\": contar_intercepciones(eq2),\n",
    "            \"duelos_aereos\": contar_duelos_aereos(eq2),\n",
    "            \"entradas\": contar_entradas_ganadas(eq2),\n",
    "            \"duelos_suelo\": contar_duelos_suelo(eq2),\n",
    "            \"recuperaciones\": contar_recuperaciones(eq2),\n",
    "            \"pases_pct\": porcentaje_pases_acertados(eq2)\n",
    "        }\n",
    "    }\n",
    "\n",
    "    return resumen\n",
    "\n",
    "#################################\n",
    "# NOMBRE DE COMPETICIÓN Y ESTADIO\n",
    "#################################\n",
    "\n",
    "def info_general(df):\n",
    "\n",
    "    competicion = df['competition_known_name'].dropna().unique()\n",
    "    estadio = df['venue_long_name'].dropna().unique()\n",
    "\n",
    "    return (\n",
    "        competicion[0] if len(competicion) > 0 else \"Desconocida\",\n",
    "        estadio[0] if len(estadio) > 0 else \"Desconocido\"\n",
    "    )\n",
    "\n",
    "#################################\n",
    "# TABLA ANÁLSIS OFENSIVO DEL INFORME\n",
    "#################################\n",
    "    \n",
    "def tabla_analisis_ofensivo(df, equipo1, equipo2):\n",
    "    df['type_id'] = pd.to_numeric(df['type_id'], errors='coerce')\n",
    "    df['outcome'] = pd.to_numeric(df['outcome'], errors='coerce')\n",
    "    df['x'] = pd.to_numeric(df['x'], errors='coerce')\n",
    "    df['Pass End X'] = pd.to_numeric(df.get('Pass End X'), errors='coerce')\n",
    "\n",
    "    # Normalizar\n",
    "    df['event_clean'] = df['event'].astype(str).str.lower().str.strip()\n",
    "    df['team_name_clean'] = df['team_name'].apply(normalizar_nombre)\n",
    "\n",
    "    def contar(eventos, equipo):\n",
    "        return df[(df['team_name_clean'] == equipo) & (df['event_clean'].isin(eventos))].shape[0]\n",
    "\n",
    "    def contar_goles(equipo):\n",
    "        return df[\n",
    "            (df['team_name_clean'] == equipo) &\n",
    "            (df['event_clean'] == 'goal') &\n",
    "            (df['own goal'] != 1.0)\n",
    "        ].shape[0]\n",
    "\n",
    "    def contar_centros(equipo):\n",
    "        return df[\n",
    "            (df['team_name_clean'] == equipo) &\n",
    "            (df['type_id'] == 1) &\n",
    "            (df.get('Cross', 0) == 1)\n",
    "        ].shape[0]\n",
    "\n",
    "    def contar_pases_verticales(equipo):\n",
    "        return df[\n",
    "            (df['team_name_clean'] == equipo) &\n",
    "            (df['type_id'] == 1) &\n",
    "            (df['x'] < df['Pass End X'])\n",
    "        ].shape[0]\n",
    "\n",
    "    eq1 = normalizar_nombre(equipo1)\n",
    "    eq2 = normalizar_nombre(equipo2)\n",
    "\n",
    "    datos = {\n",
    "        'Estadística': ['Tiros', 'Tiros a Puerta', 'Goles', 'Centros', 'Pases Verticales'],\n",
    "        equipo1: [\n",
    "            contar(['goal', 'saved shot', 'miss', 'shot on post', 'blocked shot'], eq1),\n",
    "            contar(['goal', 'saved shot'], eq1),\n",
    "            contar_goles(eq1),\n",
    "            contar_centros(eq1),\n",
    "            contar_pases_verticales(eq1)\n",
    "        ],\n",
    "        equipo2: [\n",
    "            contar(['goal', 'saved shot', 'miss', 'shot on post', 'blocked shot'], eq2),\n",
    "            contar(['goal', 'saved shot'], eq2),\n",
    "            contar_goles(eq2),\n",
    "            contar_centros(eq2),\n",
    "            contar_pases_verticales(eq2)\n",
    "        ]\n",
    "    }\n",
    "\n",
    "    df_tabla = pd.DataFrame(datos)\n",
    "\n",
    "    return dash_table.DataTable(\n",
    "        data=df_tabla.to_dict('records'),\n",
    "        columns=[{\"name\": i, \"id\": i} for i in df_tabla.columns],\n",
    "        style_table={\n",
    "            'width': '80%',\n",
    "            'margin': 'auto',\n",
    "            'marginTop': '30px',\n",
    "            'boxShadow': '0 4px 12px rgba(0,0,0,0.1)',\n",
    "            'borderRadius': '8px',\n",
    "            'overflow': 'hidden'\n",
    "        },\n",
    "        style_header={\n",
    "            'backgroundColor': '#f0f0f0',\n",
    "            'fontWeight': 'bold',\n",
    "            'fontSize': '16px',\n",
    "            'borderBottom': '2px solid black'\n",
    "        },\n",
    "        style_cell={\n",
    "            'textAlign': 'center',\n",
    "            'fontFamily': 'Arial, sans-serif',\n",
    "            'padding': '10px'\n",
    "        },\n",
    "        style_data={\n",
    "            'borderBottom': '1px solid #ccc'\n",
    "        }\n",
    "    )\n",
    "\n",
    "#################################\n",
    "# TABLA ANÁLSIS DEFENSIVO DEL INFORME\n",
    "#################################\n",
    "\n",
    "def tabla_analisis_defensivo(df, equipo1, equipo2):\n",
    "    def datos_defensivos(equipo):\n",
    "        df_eq = df[df['team_name'].str.lower() == equipo.lower()].copy()\n",
    "        df_eq['event'] = df_eq['event'].astype(str).str.lower()\n",
    "        df_eq['type_id'] = pd.to_numeric(df_eq.get('type_id'), errors='coerce')\n",
    "        df_eq['outcome'] = pd.to_numeric(df_eq.get('outcome'), errors='coerce')\n",
    "\n",
    "        total_robos = df_eq[df_eq['event'] == 'tackle']\n",
    "        robos_exitosos = total_robos[total_robos['outcome'] == 1]\n",
    "\n",
    "        duelos = df_eq[df_eq['event'] == 'challenge']\n",
    "        duelos_ganados = duelos[duelos['outcome'] == 1]\n",
    "\n",
    "        faltas = df_eq[df_eq['event'] == 'foul']\n",
    "        amarillas = df_eq[(df_eq['event'] == 'card') & (df_eq['type_id'] == 17)]\n",
    "        rojas = df_eq[(df_eq['event'] == 'card') & (df_eq['type_id'] == 18)]\n",
    "\n",
    "        return {\n",
    "            'Total de robos': len(total_robos),\n",
    "            'Robos exitosos': len(robos_exitosos),\n",
    "            'Duelos defensivos ganados': len(duelos_ganados),\n",
    "            'Faltas cometidas': len(faltas),\n",
    "            'Tarjetas amarillas': len(amarillas),\n",
    "            'Tarjetas rojas': len(rojas)\n",
    "        }\n",
    "\n",
    "    datos1 = datos_defensivos(equipo1)\n",
    "    datos2 = datos_defensivos(equipo2)\n",
    "\n",
    "    filas = []\n",
    "    for key in datos1:\n",
    "        val1 = datos1[key]\n",
    "        val2 = datos2[key]\n",
    "\n",
    "        color1 = 'green' if val1 > val2 else ('black' if val1 < val2 else 'green')\n",
    "        color2 = 'green' if val2 > val1 else ('black' if val2 < val1 else 'green')\n",
    "\n",
    "        filas.append(html.Tr([\n",
    "            html.Td(key, style={'padding': '12px', 'fontWeight': 'bold'}),\n",
    "            html.Td(val1, style={'textAlign': 'center', 'color': color1}),\n",
    "            html.Td(val2, style={'textAlign': 'center', 'color': color2}),\n",
    "        ], style={'borderBottom': '1px solid #ccc'}))\n",
    "\n",
    "    return html.Div([\n",
    "        html.Table([\n",
    "            html.Thead(html.Tr([\n",
    "                html.Th(\"Estadística\", style={'padding': '14px', 'fontSize': '16px'}),\n",
    "                html.Th(equipo1, style={'padding': '14px', 'textAlign': 'center', 'fontSize': '16px'}),\n",
    "                html.Th(equipo2, style={'padding': '14px', 'textAlign': 'center', 'fontSize': '16px'})\n",
    "            ])),\n",
    "            html.Tbody(filas)\n",
    "        ], style={\n",
    "            'width': '90%',\n",
    "            'margin': '0 auto',\n",
    "            'borderCollapse': 'collapse',\n",
    "            'fontFamily': 'Arial, sans-serif',\n",
    "            'backgroundColor': '#fff',\n",
    "            'boxShadow': '0 4px 12px rgba(0,0,0,0.1)',\n",
    "            'borderRadius': '8px',\n",
    "            'overflow': 'hidden'\n",
    "        })\n",
    "    ])\n",
    "\n",
    "#################################\n",
    "# MAPA DE RECUPERACIONES DEL INFORME\n",
    "#################################\n",
    "\n",
    "import base64\n",
    "from io import BytesIO\n",
    "from mplsoccer import Pitch\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "def mapa_recuperaciones(df, equipo=\"Real Madrid CF\"):\n",
    "    df = df.copy()\n",
    "    df[\"x\"] = pd.to_numeric(df[\"x\"], errors='coerce')\n",
    "    df[\"y\"] = pd.to_numeric(df[\"y\"], errors='coerce')\n",
    "    df[\"type_id\"] = pd.to_numeric(df[\"type_id\"], errors='coerce')\n",
    "\n",
    "    df_rec = df[df[\"type_id\"].isin([7, 49])]  # Solo tackle y ball recovery\n",
    "    df_eq = df_rec[df_rec[\"team_name\"] == equipo]\n",
    "\n",
    "    pitch = Pitch(pitch_type='statsbomb', pitch_color='#3d642d', line_color='white')\n",
    "    fig, ax = pitch.draw(figsize=(10, 8))\n",
    "    ax.invert_yaxis()\n",
    "\n",
    "    pitch.kdeplot(\n",
    "        x=df_eq['x'],\n",
    "        y=df_eq['y'],\n",
    "        ax=ax,\n",
    "        fill=True,\n",
    "        cmap='Blues',\n",
    "        levels=50,\n",
    "        thresh=0.1,\n",
    "        alpha=0.6\n",
    "    )\n",
    "    ax.set_title(f'Mapa de Calor - Recuperaciones de Balón ({equipo})', fontsize=16, color='white')\n",
    "\n",
    "    buffer = BytesIO()\n",
    "    plt.savefig(buffer, format='png', bbox_inches='tight', dpi=150, facecolor=fig.get_facecolor())\n",
    "    buffer.seek(0)\n",
    "    imagen_base64 = base64.b64encode(buffer.read()).decode('utf-8')\n",
    "    plt.close(fig)\n",
    "\n",
    "    return f\"data:image/png;base64,{imagen_base64}\"\n",
    "\n",
    "#################################\n",
    "# TABLA ANÁLSIS GENERAL DEL INFORME\n",
    "#################################\n",
    "\n",
    "def tabla_estadisticas_generales_informe(df, equipo1, equipo2):\n",
    "    stats1 = {\n",
    "        \"Pases Totales\": contar_pases_totales(df, equipo1),\n",
    "        \"Pases Completados\": contar_pases_completados(df, equipo1),\n",
    "        \"Fueras de Juego\": contar_fueras_de_juego(df, equipo1),\n",
    "        \"Córners\": contar_corners(df, equipo1),\n",
    "        \"Faltas Cometidas\": contar_faltas(df, equipo1),\n",
    "        \"Tarjetas\": contar_tarjetas(df, equipo1)\n",
    "    }\n",
    "\n",
    "    stats2 = {\n",
    "        \"Pases Totales\": contar_pases_totales(df, equipo2),\n",
    "        \"Pases Completados\": contar_pases_completados(df, equipo2),\n",
    "        \"Fueras de Juego\": contar_fueras_de_juego(df, equipo2),\n",
    "        \"Córners\": contar_corners(df, equipo2),\n",
    "        \"Faltas Cometidas\": contar_faltas(df, equipo2),\n",
    "        \"Tarjetas\": contar_tarjetas(df, equipo2)\n",
    "    }\n",
    "\n",
    "    filas = []\n",
    "    for key in stats1:\n",
    "        val1 = stats1[key]\n",
    "        val2 = stats2[key]\n",
    "\n",
    "        color1 = 'green' if val1 > val2 else ('black' if val1 < val2 else 'green')\n",
    "        color2 = 'green' if val2 > val1 else ('black' if val2 < val1 else 'green')\n",
    "\n",
    "        filas.append(html.Tr([\n",
    "            html.Td(key, style={'padding': '12px', 'fontWeight': 'bold'}),\n",
    "            html.Td(val1, style={'textAlign': 'center', 'color': color1}),\n",
    "            html.Td(val2, style={'textAlign': 'center', 'color': color2}),\n",
    "        ], style={'borderBottom': '1px solid #ccc'}))\n",
    "\n",
    "    return html.Div([\n",
    "        html.Table([\n",
    "            html.Thead(html.Tr([\n",
    "                html.Th(\"Estadística\", style={'padding': '14px', 'fontSize': '16px'}),\n",
    "                html.Th(equipo1, style={'padding': '14px', 'textAlign': 'center', 'fontSize': '16px'}),\n",
    "                html.Th(equipo2, style={'padding': '14px', 'textAlign': 'center', 'fontSize': '16px'})\n",
    "            ])),\n",
    "            html.Tbody(filas)\n",
    "        ], style={\n",
    "            'width': '90%',\n",
    "            'margin': '0 auto',\n",
    "            'borderCollapse': 'collapse',\n",
    "            'fontFamily': 'Arial, sans-serif',\n",
    "            'backgroundColor': '#fff',\n",
    "            'boxShadow': '0 4px 12px rgba(0,0,0,0.1)',\n",
    "            'borderRadius': '8px',\n",
    "            'overflow': 'hidden'\n",
    "        })\n",
    "    ])\n",
    "\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from mplsoccer import Pitch\n",
    "from io import BytesIO\n",
    "import base64\n",
    "\n",
    "#################################\n",
    "# MAPA DE ACCIONES OFENSIVAS POR POSICION DEL INFORME\n",
    "#################################\n",
    "\n",
    "def mapa_ofensivo(df, equipo, posicion='Midfielder'):\n",
    "    import pandas as pd\n",
    "    from mplsoccer import Pitch\n",
    "    import matplotlib.pyplot as plt\n",
    "    from io import BytesIO\n",
    "    import base64\n",
    "\n",
    "    df = df.copy()\n",
    "    df[\"x\"] = pd.to_numeric(df[\"x\"], errors='coerce')\n",
    "    df[\"y\"] = pd.to_numeric(df[\"y\"], errors='coerce')\n",
    "    df[\"type_id\"] = pd.to_numeric(df[\"type_id\"], errors='coerce')\n",
    "\n",
    "    offensive_ids = [1, 3, 13, 14, 15, 16, 60] \n",
    "    df = df[df[\"type_id\"].isin(offensive_ids)]\n",
    "    df = df[df[\"team_name\"] == equipo]\n",
    "\n",
    "    position_map = {\n",
    "        'GK': 'Goalkeeper',\n",
    "        'CB': 'Defender', 'LB': 'Defender', 'RB': 'Defender',\n",
    "        'LWB': 'Defender', 'RWB': 'Defender',\n",
    "        'CDM': 'Midfielder', 'CM': 'Midfielder', 'MC': 'Midfielder',\n",
    "        'CAM': 'Midfielder', 'LM': 'Midfielder', 'RM': 'Midfielder',\n",
    "        'LW': 'Forward', 'RW': 'Forward', 'CF': 'Forward', 'ST': 'Forward'\n",
    "    }\n",
    "\n",
    "    df['role'] = df['position'].map(position_map).fillna('Other')\n",
    "    df = df[df['role'] == posicion]\n",
    "    df = df.dropna(subset=['x', 'y'])\n",
    "\n",
    "    pitch = Pitch(pitch_type='statsbomb', pitch_color='#3d642d', line_color='white')\n",
    "    fig, ax = pitch.draw(figsize=(10, 8))\n",
    "    ax.invert_yaxis()\n",
    "\n",
    "    pitch.kdeplot(\n",
    "        x=df['x'],\n",
    "        y=df['y'],\n",
    "        ax=ax,\n",
    "        fill=True,\n",
    "        cmap='Reds',\n",
    "        levels=50,\n",
    "        thresh=0.1,\n",
    "        alpha=0.6\n",
    "    )\n",
    "\n",
    "    ax.set_title(f'Mapa de Calor Ofensivo - {posicion} ({equipo})', fontsize=16, color='white')\n",
    "\n",
    "    buffer = BytesIO()\n",
    "    plt.savefig(buffer, format='png', bbox_inches='tight', dpi=150, facecolor=fig.get_facecolor())\n",
    "    buffer.seek(0)\n",
    "    imagen_base64 = base64.b64encode(buffer.read()).decode('utf-8')\n",
    "    plt.close(fig)\n",
    "\n",
    "    return f\"data:image/png;base64,{imagen_base64}\"\n",
    "\n",
    "#################################\n",
    "# MAPA DE ACCIONES DEFENSIVAS POR POSICION DEL INFORME\n",
    "#################################\n",
    "\n",
    "def mapa_defensivo(df, equipo, posicion='Defender'):\n",
    "    import pandas as pd\n",
    "    from mplsoccer import Pitch\n",
    "    import matplotlib.pyplot as plt\n",
    "    from io import BytesIO\n",
    "    import base64\n",
    "\n",
    "    df = df.copy()\n",
    "    df[\"x\"] = pd.to_numeric(df[\"x\"], errors='coerce')\n",
    "    df[\"y\"] = pd.to_numeric(df[\"y\"], errors='coerce')\n",
    "    df[\"type_id\"] = pd.to_numeric(df[\"type_id\"], errors='coerce')\n",
    "\n",
    "    defensive_ids = [4, 5, 6, 17, 18, 19, 20, 21] \n",
    "    df = df[df[\"type_id\"].isin(defensive_ids)]\n",
    "    df = df[df[\"team_name\"] == equipo]\n",
    "\n",
    "    position_map = {\n",
    "        'GK': 'Goalkeeper',\n",
    "        'CB': 'Defender', 'LB': 'Defender', 'RB': 'Defender',\n",
    "        'LWB': 'Defender', 'RWB': 'Defender',\n",
    "        'CDM': 'Midfielder', 'CM': 'Midfielder', 'MC': 'Midfielder',\n",
    "        'CAM': 'Midfielder', 'LM': 'Midfielder', 'RM': 'Midfielder',\n",
    "        'LW': 'Forward', 'RW': 'Forward', 'CF': 'Forward', 'ST': 'Forward'\n",
    "    }\n",
    "\n",
    "    df['role'] = df['position'].map(position_map).fillna('Other')\n",
    "    df = df[df['role'] == posicion]\n",
    "    df = df.dropna(subset=['x', 'y'])\n",
    "\n",
    "    pitch = Pitch(pitch_type='statsbomb', pitch_color='#1e4b1a', line_color='white')\n",
    "    fig, ax = pitch.draw(figsize=(10, 8))\n",
    "    ax.invert_yaxis()\n",
    "\n",
    "    pitch.kdeplot(\n",
    "        x=df['x'],\n",
    "        y=df['y'],\n",
    "        ax=ax,\n",
    "        fill=True,\n",
    "        cmap='Blues',\n",
    "        levels=50,\n",
    "        thresh=0.1,\n",
    "        alpha=0.7\n",
    "    )\n",
    "\n",
    "    ax.set_title(f'Mapa de Acciones Defensivas - {posicion} ({equipo})', fontsize=16, color='white')\n",
    "\n",
    "    buffer = BytesIO()\n",
    "    plt.savefig(buffer, format='png', bbox_inches='tight', dpi=150, facecolor=fig.get_facecolor())\n",
    "    buffer.seek(0)\n",
    "    imagen_base64 = base64.b64encode(buffer.read()).decode('utf-8')\n",
    "    plt.close(fig)\n",
    "\n",
    "    return f\"data:image/png;base64,{imagen_base64}\"\n",
    "\n",
    "\n",
    "def nombre_rival(df, equipo):\n",
    "    equipos = df['team_name'].dropna().unique()\n",
    "    for eq in equipos:\n",
    "        if normalizar_nombre(eq) != normalizar_nombre(equipo):\n",
    "            return eq\n",
    "    return \"Rival\"\n",
    "\n",
    "\n",
    "def partido_detalle_layout(df, equipo1, equipo2):\n",
    "    df['event_clean'] = df['event'].astype(str).str.strip().str.lower()\n",
    "\n",
    "    return html.Div([\n",
    "        nav_bar,\n",
    "\n",
    "        html.H2(resultado_partido(df, equipo1, equipo2), style={'textAlign': 'center', 'marginTop': '20px'}),\n",
    "\n",
    "        dcc.Tabs(id='tabs-partido', value='generales', children=[\n",
    "            dcc.Tab(label='Datos Generales', value='generales'),\n",
    "            dcc.Tab(label='Análisis Real Madrid CF', value='ofensivo'),\n",
    "            dcc.Tab(label='Análisis Rival', value='defensivo'),\n",
    "            dcc.Tab(label='Informe de Partido', value='informe'),\n",
    "        ], style={'margin': '30px'}),\n",
    "\n",
    "        html.Div(id='contenido-tab-partido'),\n",
    "\n",
    "        dcc.Store(id='data-store', data=df.to_dict('records')),\n",
    "        dcc.Store(id='partido-folder', data=equipo2)\n",
    "    ])\n",
    "\n",
    "\n",
    "\n",
    "def analisis_layout(pathname):\n",
    "    partes = pathname.split('/')\n",
    "    if len(partes) == 4:\n",
    "        competencia = partes[2]\n",
    "        equipos = partes[3].split('-')\n",
    "        if len(equipos) == 2:\n",
    "            equipo1_url, equipo2_url = equipos\n",
    "            equipo1 = equipo1_url.replace('_', ' ').title() + \" CF\"\n",
    "            equipo2 = equipo2_url.replace('_', ' ').title() + \" CF\"\n",
    "            return partido_detalle_layout(equipo1, equipo2)\n",
    "    return html.Div([\n",
    "        nav_bar,\n",
    "        html.H2(\"Análisis no disponible para este partido.\")\n",
    "    ])\n",
    "\n",
    "\n",
    "app.layout = html.Div([\n",
    "    dcc.Location(id='url', refresh=False),\n",
    "    html.Div(id='page-content')\n",
    "])\n",
    "\n",
    "@app.callback(Output('page-content', 'children'),\n",
    "              Input('url', 'pathname'))\n",
    "def display_page(pathname):\n",
    "    if pathname.startswith('/analisis/'):\n",
    "        return analisis_layout(pathname)\n",
    "    elif pathname == '/liga':\n",
    "        return liga()\n",
    "    elif pathname == '/champions':\n",
    "        return champions()\n",
    "    elif pathname == '/copa':\n",
    "        return copa()\n",
    "    return html.Div([\n",
    "        nav_bar,\n",
    "        html.H1(\"Bienvenido a la página de fútbol\", style={'margin': '30px'}),\n",
    "        tabla_estadisticas_abril(),         \n",
    "        tabla_estadisticas_jugadores_abril()         \n",
    "    ])\n",
    "\n",
    "import os\n",
    "\n",
    "def analisis_layout(pathname):\n",
    "    partes = pathname.split('/')\n",
    "    if len(partes) == 4:\n",
    "        competencia = partes[2]\n",
    "        equipos = partes[3].split('-')\n",
    "\n",
    "        if len(equipos) == 2:\n",
    "            equipo1_url, equipo2_url = equipos\n",
    "            equipo1 = equipo1_url.replace('_', ' ').title() + \" CF\"\n",
    "            equipo2 = equipo2_url.replace('_', ' ').title() + \" CF\"\n",
    "            clave = (equipo1_url, equipo2_url)\n",
    "            nombre_archivo = CSV_MAP.get(clave)\n",
    "\n",
    "            if not nombre_archivo:\n",
    "                clave = (equipo2_url, equipo1_url)\n",
    "                nombre_archivo = CSV_MAP.get(clave)\n",
    "\n",
    "            if not nombre_archivo:\n",
    "                return html.Div([\n",
    "                    nav_bar,\n",
    "                    html.H3(f\"No se encontró el archivo para: {clave}\")\n",
    "                ])\n",
    "            nombre_archivo = os.path.join(\"/Users/jaimegimenez/Desktop/TFM/Partidos_CSV\", nombre_archivo)\n",
    "\n",
    "            if not os.path.exists(nombre_archivo):\n",
    "                return html.Div([\n",
    "                    nav_bar,\n",
    "                    html.H3(f\"No se encontró el archivo: {nombre_archivo}\")\n",
    "                ])\n",
    "            df = pd.read_csv(nombre_archivo)\n",
    "            df.columns = df.columns.str.strip()\n",
    "            df['event'] = df['event'].str.lower()\n",
    "            df['player_name'] = df['player_name'].fillna('')\n",
    "            df['team_name'] = df['team_name'].fillna('')\n",
    "            df = df[df['player_name'].str.lower() != 'unknown']\n",
    "\n",
    "            return partido_detalle_layout(df, equipo1, equipo2)\n",
    "\n",
    "    return html.Div([\n",
    "        nav_bar,\n",
    "        html.H2(\"Análisis no disponible para este partido.\")\n",
    "    ])\n",
    "\n",
    "\n",
    "\n",
    "@app.callback(\n",
    "    Output('dropdown-jugador-1', 'options'),\n",
    "    Output('dropdown-jugador-1', 'value'),\n",
    "    Input('dropdown-equipo-1', 'value'),\n",
    "    Input('data-store', 'data')\n",
    ")\n",
    "def actualizar_jugadores_1(equipo, data):\n",
    "    df = pd.DataFrame(data)\n",
    "    df = df[df['team_name'] == equipo]\n",
    "    df = df[df['player_name'].notna() & (df['player_name'].str.strip() != '')]\n",
    "\n",
    "    # Prioriza filas con posición no nula\n",
    "    df['has_position'] = df['position'].notnull()\n",
    "    df = df.sort_values(by='has_position', ascending=False)\n",
    "    \n",
    "    # Agrupa por nombre de jugador y conserva la mejor fila (con posición si existe)\n",
    "    df_unique = df.drop_duplicates(subset=['player_name'], keep='first')\n",
    "    \n",
    "    # Crear display final\n",
    "    df_unique['display'] = df_unique.apply(\n",
    "        lambda row: f\"{row['player_name']} ({row['position']})\" if pd.notnull(row['position']) else row['player_name'],\n",
    "        axis=1\n",
    "    )\n",
    "    jugadores = df_unique[['player_name', 'display']].sort_values('player_name')\n",
    "\n",
    "    options = [{'label': row['display'], 'value': row['player_name']} for _, row in jugadores.iterrows()]\n",
    "    options.insert(0, {'label': 'Equipo Completo', 'value': 'Equipo Completo'})\n",
    "    return options, options[0]['value']\n",
    "\n",
    "\n",
    "@app.callback(\n",
    "    Output('dropdown-jugador-2', 'options'),\n",
    "    Output('dropdown-jugador-2', 'value'),\n",
    "    Input('dropdown-equipo-2', 'value'),\n",
    "    Input('data-store', 'data')\n",
    ")\n",
    "def actualizar_jugadores_2(equipo, data):\n",
    "    df = pd.DataFrame(data)\n",
    "    df = df[df['team_name'] == equipo]\n",
    "    df = df[df['player_name'].notna() & (df['player_name'].str.strip() != '')]\n",
    "\n",
    "    df['has_position'] = df['position'].notnull()\n",
    "    df = df.sort_values(by='has_position', ascending=False)\n",
    "    \n",
    "    df_unique = df.drop_duplicates(subset=['player_name'], keep='first')\n",
    "    \n",
    "    df_unique['display'] = df_unique.apply(\n",
    "        lambda row: f\"{row['player_name']} ({row['position']})\" if pd.notnull(row['position']) else row['player_name'],\n",
    "        axis=1\n",
    "    )\n",
    "\n",
    "    jugadores = df_unique[['player_name', 'display']].sort_values('player_name')\n",
    "\n",
    "    options = [{'label': row['display'], 'value': row['player_name']} for _, row in jugadores.iterrows()]\n",
    "    options.insert(0, {'label': 'Equipo Completo', 'value': 'Equipo Completo'})\n",
    "    return options, options[0]['value']\n",
    "\n",
    "\n",
    "@app.callback(\n",
    "    Output('mapa-madrid', 'src'),\n",
    "    Output('mapa-rival', 'src'),\n",
    "    Input('posicion-madrid', 'value'),\n",
    "    Input('posicion-rival', 'value'),\n",
    "    State('data-store', 'data') \n",
    ")\n",
    "def actualizar_mapas(pos_mad, pos_riv, data_json):\n",
    "    df = pd.DataFrame(data_json)\n",
    "\n",
    "    equipos = df['team_name'].dropna().unique()\n",
    "    equipo1 = next((e for e in equipos if \"real madrid\" in e.lower()), None)\n",
    "    equipo2 = next((e for e in equipos if e != equipo1), None)\n",
    "\n",
    "    mapa1 = mapa_ofensivo(df, equipo1, posicion=pos_mad)\n",
    "    mapa2 = mapa_ofensivo(df, equipo2, posicion=pos_riv)\n",
    "    return mapa1, mapa2\n",
    "\n",
    "@app.callback(\n",
    "    Output('mapa-defensivo-madrid', 'src'),\n",
    "    Output('mapa-defensivo-rival', 'src'),\n",
    "    Input('posicion-defensiva-madrid', 'value'),\n",
    "    Input('posicion-defensiva-rival', 'value'),\n",
    "    State('data-store', 'data')\n",
    ")   \n",
    "def actualizar_mapas_defensivos(pos_mad, pos_riv, data_json):\n",
    "    df = pd.DataFrame(data_json)\n",
    "\n",
    "    equipos = df['team_name'].dropna().unique()\n",
    "    equipo1 = next((e for e in equipos if \"real madrid\" in e.lower()), None)\n",
    "    equipo2 = next((e for e in equipos if e != equipo1), None)\n",
    "\n",
    "    mapa1 = mapa_defensivo(df, equipo1, posicion=pos_mad)\n",
    "    mapa2 = mapa_defensivo(df, equipo2, posicion=pos_riv)\n",
    "    return mapa1, mapa2\n",
    "\n",
    "\n",
    "@app.callback(Output('imagen-calor-1', 'src'),\n",
    "              Input('dropdown-equipo-1', 'value'),\n",
    "              Input('dropdown-jugador-1', 'value'),\n",
    "              Input('url', 'pathname'))\n",
    "def mostrar_mapa_1(equipo, jugador, pathname):\n",
    "    return cargar_mapa_calor(equipo, jugador, pathname)\n",
    "\n",
    "@app.callback(Output('imagen-calor-2', 'src'),\n",
    "              Input('dropdown-equipo-2', 'value'),\n",
    "              Input('dropdown-jugador-2', 'value'),\n",
    "              Input('url', 'pathname'))\n",
    "def mostrar_mapa_2(equipo, jugador, pathname):\n",
    "    return cargar_mapa_calor(equipo, jugador, pathname)\n",
    "\n",
    "\n",
    "@app.callback(Output('tabla-comparativa', 'children'),\n",
    "              Input('dropdown-equipo-1', 'value'),\n",
    "              Input('dropdown-jugador-1', 'value'),\n",
    "              Input('dropdown-equipo-2', 'value'),\n",
    "              Input('dropdown-jugador-2', 'value'),\n",
    "              Input('data-store', 'data'))\n",
    "def actualizar_tabla(eq1, jug1, eq2, jug2, data):\n",
    "    if not jug1 or not jug2 or jug1 == \"Equipo Completo\" or jug2 == \"Equipo Completo\":\n",
    "        return \"\"\n",
    "\n",
    "    df = pd.DataFrame(data)\n",
    "    stats1 = calcular_estadisticas(df, eq1, jug1)\n",
    "    stats2 = calcular_estadisticas(df, eq2, jug2)\n",
    "    return tabla_estadisticas(stats1, stats2, jug1, jug2)\n",
    "\n",
    "#################################\n",
    "# CREACIÓNDE LOS APARTADOS DE LA WEB, GENERAL, DE CADA EQUIPO Y EL INFORME\n",
    "#################################\n",
    "@app.callback(\n",
    "    Output('contenido-tab-partido', 'children'),\n",
    "    Input('tabs-partido', 'value'),\n",
    "    State('data-store', 'data'),\n",
    "    State('partido-folder', 'data')  \n",
    ")\n",
    "\n",
    "def render_contenido_tab(tab_seleccionado, data, equipo2):\n",
    "\n",
    "    df = pd.DataFrame(data)\n",
    "    df['event_clean'] = df['event'].astype(str).str.strip().str.lower()\n",
    "    df['team_name_clean'] = df['team_name'].apply(normalizar_nombre)\n",
    "    \n",
    "    equipos = df['team_name'].dropna().unique()\n",
    "    equipo1 = deducir_equipo_1(equipos, equipo2)\n",
    "\n",
    "    if tab_seleccionado == 'generales':\n",
    "        return html.Div([\n",
    "            analisis_general_por_equipo(df, equipo1, equipo2),\n",
    "\n",
    "            html.Div([\n",
    "                html.Div([\n",
    "                    html.Label(\"Equipo 1\"),\n",
    "                    dcc.Dropdown(id='dropdown-equipo-1', options=[{'label': e, 'value': e} for e in equipos], value=equipo1),\n",
    "                    html.Label(\"Jugador 1\"),\n",
    "                    dcc.Dropdown(id='dropdown-jugador-1'),\n",
    "                    html.Img(id='imagen-calor-1', style={'width': '100%', 'marginTop': '20px'})\n",
    "                ], style={'width': '45%', 'padding': '10px'}),\n",
    "\n",
    "                html.Div([\n",
    "                    html.Label(\"Equipo 2\"),\n",
    "                    dcc.Dropdown(id='dropdown-equipo-2', options=[{'label': e, 'value': e} for e in equipos], value=equipo2),\n",
    "                    html.Label(\"Jugador 2\"),\n",
    "                    dcc.Dropdown(id='dropdown-jugador-2'),\n",
    "                    html.Img(id='imagen-calor-2', style={'width': '100%', 'marginTop': '20px'})\n",
    "                ], style={'width': '45%', 'padding': '10px'})\n",
    "            ], style={'display': 'flex', 'justifyContent': 'space-around'}),\n",
    "\n",
    "            html.Div(id='tabla-comparativa', style={'marginTop': '40px'})\n",
    "        ])\n",
    "\n",
    "    elif tab_seleccionado == 'ofensivo':\n",
    "        equipo_real_madrid = \"Real Madrid CF\"\n",
    "\n",
    "        porcentajes = porcentajes_ataques(df, equipo=equipo_real_madrid)\n",
    "        imagen_zonas = mapa_zonas_ataque(porcentajes)\n",
    "\n",
    "        return html.Div([\n",
    "            html.H3(\"Análisis del Real Madrid CF\", style={'textAlign': 'center'}),\n",
    "\n",
    "            html.Div([\n",
    "                html.Div([\n",
    "                    dcc.Graph(figure=mapa_tiros(df, equipo_real_madrid))\n",
    "                ], style={'width': '65%', 'paddingRight': '20px'}),\n",
    "\n",
    "                html.Div([\n",
    "                    dcc.Graph(figure=grafico_porteria_reducido(df, equipo=equipo_real_madrid))\n",
    "                ], style={\n",
    "                    'width': '35%',\n",
    "                    'marginTop': '135px'\n",
    "                })\n",
    "            ], style={'display': 'flex', 'justifyContent': 'space-between', 'alignItems': 'flex-start'}),\n",
    "\n",
    "            html.Div([\n",
    "                html.Img(src=imagen_zonas, style={\n",
    "                    'width': '60%',\n",
    "                    'display': 'block',\n",
    "                    'marginTop': '80px',\n",
    "                    'marginBottom': '40px',\n",
    "                    'marginLeft': 'auto',\n",
    "                    'marginRight': 'auto'\n",
    "                })\n",
    "            ]),\n",
    "\n",
    "            html.Div([\n",
    "                html.H4(\"Matriz de Calor de Pases entre Jugadores\", style={'textAlign': 'center', 'marginTop': '40px'}),\n",
    "                dcc.Graph(figure=mapa_calor_combinaciones_pases(df, equipo_real_madrid))\n",
    "            ], style={'marginTop': '40px'}),\n",
    "\n",
    "            html.Div([\n",
    "                html.H4(\"Recepciones tras córners ejecutados por Real Madrid\", style={'textAlign': 'center', 'marginTop': '40px'}),\n",
    "\n",
    "                html.Div([\n",
    "                    html.Div([\n",
    "                        grafico_corners(df, equipo=equipo_real_madrid)  \n",
    "                    ], style={'width': '65%', 'paddingRight': '20px'}),\n",
    "\n",
    "                    html.Div([\n",
    "                        html.H5(\"Oportunidades tras Balón Parado\", style={'textAlign': 'center'}),\n",
    "                        tabla_tiros_balon_parado(df, equipo_real_madrid)\n",
    "                    ], style={'width': '35%', 'padding': '10px'})\n",
    "                ], style={'display': 'flex', 'justifyContent': 'space-between', 'alignItems': 'flex-start'})\n",
    "            ])\n",
    "        ])\n",
    "    elif tab_seleccionado == 'defensivo':\n",
    "        equipo_real_madrid = \"Real Madrid CF\"\n",
    "        equipo_rival = nombre_rival(df, equipo_real_madrid)\n",
    "\n",
    "        porcentajes = porcentajes_ataques(df, equipo=equipo_rival)\n",
    "        imagen_zonas = mapa_zonas_ataque(porcentajes)\n",
    "        return html.Div([\n",
    "            html.H3(f\"Análisis del {equipo_rival}\", style={'textAlign': 'center'}),\n",
    "\n",
    "            html.Div([\n",
    "                html.Div([\n",
    "                    dcc.Graph(figure=mapa_tiros(df, equipo_rival))\n",
    "                ], style={'width': '65%', 'paddingRight': '20px'}),\n",
    "\n",
    "                html.Div([\n",
    "                    dcc.Graph(figure=grafico_porteria_reducido(df, equipo=equipo_rival))\n",
    "                ], style={\n",
    "                    'width': '35%',\n",
    "                    'marginTop': '135px'\n",
    "                })\n",
    "            ], style={'display': 'flex', 'justifyContent': 'space-between', 'alignItems': 'flex-start'}),\n",
    "\n",
    "            html.Div([\n",
    "                html.Img(src=imagen_zonas, style={\n",
    "                    'width': '60%',\n",
    "                    'display': 'block',\n",
    "                    'marginTop': '80px',\n",
    "                    'marginBottom': '40px',\n",
    "                    'marginLeft': 'auto',\n",
    "                    'marginRight': 'auto'\n",
    "                })\n",
    "            ]),\n",
    "\n",
    "            html.Div([\n",
    "                html.H4(\"Matriz de Calor de Pases entre Jugadores Rivales\", style={'textAlign': 'center', 'marginTop': '40px'}),\n",
    "                dcc.Graph(figure=mapa_calor_combinaciones_pases(df, equipo_rival))\n",
    "            ], style={'marginTop': '40px'}),\n",
    "\n",
    "            html.Div([\n",
    "                html.H4(f\"Recepciones tras córners ejecutados por {equipo_rival}\", style={'textAlign': 'center', 'marginTop': '40px'}),\n",
    "\n",
    "                html.Div([\n",
    "                    html.Div([\n",
    "                        grafico_corners(df, equipo=equipo_rival)\n",
    "                    ], style={'width': '65%', 'paddingRight': '20px'}),\n",
    "\n",
    "                    html.Div([\n",
    "                        html.H5(\"Tiros tras Balón Parado del Rival\", style={'textAlign': 'center'}),\n",
    "                        tabla_tiros_balon_parado(df, equipo_rival)\n",
    "                    ], style={'width': '35%', 'padding': '10px'})\n",
    "                ], style={'display': 'flex', 'justifyContent': 'space-between', 'alignItems': 'flex-start'})\n",
    "            ])\n",
    "        ])\n",
    "\n",
    "    elif tab_seleccionado == 'informe':\n",
    "        equipos = df['team_name'].dropna().unique()\n",
    "    \n",
    "        equipo1 = next((e for e in equipos if \"real madrid\" in e.lower()), None)\n",
    "        equipo2 = next((e for e in equipos if e != equipo1), None)\n",
    "    \n",
    "        eq1 = normalizar_nombre(equipo1)\n",
    "        eq2 = normalizar_nombre(equipo2)\n",
    "        competicion, estadio = info_general(df)\n",
    "    \n",
    "        return html.Div([\n",
    "            html.H3(\"📋 INFORME DE PARTIDO\", style={'textAlign': 'center'}),\n",
    "    \n",
    "            html.Div([\n",
    "                html.P(f\"Competición: {competicion}\"),\n",
    "                html.P(f\"Estadio: {estadio}\")\n",
    "            ], style={'textAlign': 'center'}),\n",
    "    \n",
    "            html.H4(\"Tabla Estadísticas\", style={'textAlign': 'center', 'marginTop': '50px'}),\n",
    "            tabla_estadisticas_generales_informe(df, equipo1, equipo2),\n",
    "    \n",
    "            html.H4(\"Mapa de Calor - Equipos Completos\", style={'textAlign': 'center', 'marginTop': '40px'}),\n",
    "            html.Div([\n",
    "                html.Div([\n",
    "                    html.Img(\n",
    "                        src=cargar_mapa_calor(equipo1, \"Equipo Completo\", pathname=f\"/analisis/x/{normalizar_nombre(equipo1).replace(' ', '_')}-{normalizar_nombre(equipo2).replace(' ', '_')}\"),\n",
    "                        style={'width': '100%', 'maxWidth': '500px', 'height': 'auto', 'display': 'block', 'margin': 'auto'}\n",
    "                    )\n",
    "                ], style={'width': '48%', 'padding': '10px'}),\n",
    "    \n",
    "                html.Div([\n",
    "                    html.Img(\n",
    "                        src=cargar_mapa_calor(equipo2, \"Equipo Completo\", pathname=f\"/analisis/x/{normalizar_nombre(equipo1).replace(' ', '_')}-{normalizar_nombre(equipo2).replace(' ', '_')}\"),\n",
    "                        style={'width': '100%', 'maxWidth': '500px', 'height': 'auto', 'display': 'block', 'margin': 'auto'}\n",
    "                    )\n",
    "                ], style={'width': '48%', 'padding': '10px'})\n",
    "            ], style={'display': 'flex', 'justifyContent': 'space-around', 'flexWrap': 'wrap'}),\n",
    "    \n",
    "            html.H4(\"Análisis Ofensivo\", style={'textAlign': 'center', 'marginTop': '30px'}),\n",
    "            tabla_analisis_ofensivo(df, equipo1, equipo2),\n",
    "    \n",
    "            html.Div([\n",
    "                html.Div([\n",
    "                    html.H5(\"Real Madrid\", style={'textAlign': 'center'}),\n",
    "                    dcc.Graph(figure=mapa_tiros(df, equipo1)),\n",
    "                    dcc.Graph(figure=grafico_porteria_reducido(df, equipo1)),\n",
    "                    html.Img(\n",
    "                        src=mapa_zonas_ataque(porcentajes_ataques(df, equipo1)),\n",
    "                        style={'width': '100%', 'marginTop': '20px'}\n",
    "                    )\n",
    "                ], style={'width': '48%', 'padding': '10px'}),\n",
    "    \n",
    "                html.Div([\n",
    "                    html.H5(\"Rival\", style={'textAlign': 'center'}),\n",
    "                    dcc.Graph(figure=mapa_tiros(df, equipo2)),\n",
    "                    dcc.Graph(figure=grafico_porteria_reducido(df, equipo2)),\n",
    "                    html.Img(\n",
    "                        src=mapa_zonas_ataque(porcentajes_ataques(df, equipo2)),\n",
    "                        style={'width': '100%', 'marginTop': '20px'}\n",
    "                    )\n",
    "                ], style={'width': '48%', 'padding': '10px'})\n",
    "            ], style={'display': 'flex', 'justifyContent': 'space-around', 'marginTop': '40px'}),\n",
    "    \n",
    "            html.H4(\"Mapa Acciones Ofensivas por Posición\", style={'textAlign': 'center', 'marginTop': '40px'}),\n",
    "            html.Div([\n",
    "                html.Div([\n",
    "                    html.Label(\"Posición ofensiva Real Madrid\"),\n",
    "                    dcc.Dropdown(\n",
    "                        id='posicion-madrid',\n",
    "                        options=[{'label': p, 'value': p} for p in ['Forward', 'Midfielder', 'Defender']],\n",
    "                        value='Midfielder'\n",
    "                    ),\n",
    "                    html.Img(id='mapa-madrid', style={'width': '100%', 'maxWidth': '500px', 'marginTop': '20px'})\n",
    "                ], style={'width': '48%', 'padding': '10px'}),\n",
    "    \n",
    "                html.Div([\n",
    "                    html.Label(\"Posición ofensiva Rival\"),\n",
    "                    dcc.Dropdown(\n",
    "                        id='posicion-rival',\n",
    "                        options=[{'label': p, 'value': p} for p in ['Forward', 'Midfielder', 'Defender']],\n",
    "                        value='Midfielder'\n",
    "                    ),\n",
    "                    html.Img(id='mapa-rival', style={'width': '100%', 'maxWidth': '500px', 'marginTop': '20px'})\n",
    "                ], style={'width': '48%', 'padding': '10px'})\n",
    "            ], style={'display': 'flex', 'justifyContent': 'space-around', 'marginTop': '20px'}),\n",
    "    \n",
    "            html.H4(\"Análisis Defensivo\", style={'textAlign': 'center', 'marginTop': '70px'}),\n",
    "            tabla_analisis_defensivo(df, equipo1, equipo2),\n",
    "    \n",
    "            html.Div([\n",
    "                html.Div([\n",
    "                    html.H5(\"Recuperaciones Real Madrid\", style={'textAlign': 'center'}),\n",
    "                    html.Img(src=mapa_recuperaciones(df, equipo1), style={'width': '100%'})\n",
    "                ], style={'width': '48%', 'padding': '10px'}),\n",
    "    \n",
    "                html.Div([\n",
    "                    html.H5(\"Recuperaciones Rival\", style={'textAlign': 'center'}),\n",
    "                    html.Img(src=mapa_recuperaciones(df, equipo2), style={'width': '100%'})\n",
    "                ], style={'width': '48%', 'padding': '10px'})\n",
    "            ], style={'display': 'flex', 'justifyContent': 'space-around', 'marginTop': '40px'}),\n",
    "    \n",
    "            html.H4(\"Mapa Acciones Defensivas por Posición\", style={'textAlign': 'center', 'marginTop': '40px'}),\n",
    "            html.Div([\n",
    "                html.Div([\n",
    "                    html.Label(\"Posición defensiva Real Madrid\"),\n",
    "                    dcc.Dropdown(\n",
    "                        id='posicion-defensiva-madrid',\n",
    "                        options=[{'label': p, 'value': p} for p in ['Forward', 'Midfielder', 'Defender']],\n",
    "                        value='Defender'\n",
    "                    ),\n",
    "                    html.Img(id='mapa-defensivo-madrid', style={'width': '100%', 'maxWidth': '500px', 'marginTop': '20px'})\n",
    "                ], style={'width': '48%', 'padding': '10px'}),\n",
    "    \n",
    "                html.Div([\n",
    "                    html.Label(\"Posición defensiva Rival\"),\n",
    "                    dcc.Dropdown(\n",
    "                        id='posicion-defensiva-rival',\n",
    "                        options=[{'label': p, 'value': p} for p in ['Forward', 'Midfielder', 'Defender']],\n",
    "                        value='Defender'\n",
    "                    ),\n",
    "                    html.Img(id='mapa-defensivo-rival', style={'width': '100%', 'maxWidth': '500px', 'marginTop': '20px'})\n",
    "                ], style={'width': '48%', 'padding': '10px'})\n",
    "            ], style={'display': 'flex', 'justifyContent': 'space-around', 'marginTop': '20px'})\n",
    "        ])\n",
    "    \n",
    "#################################\n",
    "# EJECUCIÓN DEL PROGRAMA\n",
    "#################################\n",
    "\n",
    "if __name__ == '__main__':\n",
    "    app.run(debug=True, use_reloader=False, port=8051)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3f68f3f0-76a4-4605-a8d6-272241d8b8d7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a644de11-25d9-497d-b1ac-31ace84da53e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "87c3e9fd-ca6f-41da-afe7-69ae28c94522",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "731312d1-235b-444d-bfe2-613e8b84a1ec",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "41b08101-e2d7-4e15-9791-5d7c0f0dbde4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "64821dd4-28f6-44c8-baf2-6c531dd297ba",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b0073297-888f-4600-b34c-bd6c30bf7866",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2aa8a86b-e3d9-43c9-8f0e-03aa39f5105d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.21"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
